{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "2643945c-c91a-4f73-8226-4b8adf8dc738",
   "metadata": {},
   "source": [
    "# 1.\tAnalysis of ATAS Rule Effectiveness at Identifying Fraudulent Withdrawals\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "8030b0ed-04bb-4060-ada7-cf74f5c5d662",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>USERINTID</th>\n",
       "      <th>VIP_STATUS</th>\n",
       "      <th>TRANSID</th>\n",
       "      <th>STARTED</th>\n",
       "      <th>STATUS</th>\n",
       "      <th>OLDSTATUS</th>\n",
       "      <th>STATUS.1</th>\n",
       "      <th>USERID</th>\n",
       "      <th>TRANSTYPE</th>\n",
       "      <th>RISK</th>\n",
       "      <th>ATAS_RULE</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>49031629.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.277915e+09</td>\n",
       "      <td>23/06/2015</td>\n",
       "      <td>R</td>\n",
       "      <td>M</td>\n",
       "      <td>H</td>\n",
       "      <td>HostJacobA</td>\n",
       "      <td>R</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Blacklisted Country</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>90157295.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.734859e+09</td>\n",
       "      <td>09/10/2017</td>\n",
       "      <td>R</td>\n",
       "      <td>M</td>\n",
       "      <td>H</td>\n",
       "      <td>HostAlvaroL</td>\n",
       "      <td>R</td>\n",
       "      <td>Medium</td>\n",
       "      <td>First Second Transaction</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>61485978.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.790318e+09</td>\n",
       "      <td>11/01/2018</td>\n",
       "      <td>R</td>\n",
       "      <td>M</td>\n",
       "      <td>H</td>\n",
       "      <td>HostRobertaC</td>\n",
       "      <td>R</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Closed Frozen Account</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>97403657.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.897316e+09</td>\n",
       "      <td>04/07/2018</td>\n",
       "      <td>R</td>\n",
       "      <td>M</td>\n",
       "      <td>H</td>\n",
       "      <td>HostMarvinU</td>\n",
       "      <td>R</td>\n",
       "      <td>Medium</td>\n",
       "      <td>First Second Transaction</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>97792860.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.917632e+09</td>\n",
       "      <td>11/08/2018</td>\n",
       "      <td>R</td>\n",
       "      <td>M</td>\n",
       "      <td>H</td>\n",
       "      <td>HostFabioS</td>\n",
       "      <td>R</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Possible Hacking</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    USERINTID  VIP_STATUS       TRANSID     STARTED STATUS OLDSTATUS STATUS.1  \\\n",
       "0  49031629.0         0.0  1.277915e+09  23/06/2015      R         M        H   \n",
       "1  90157295.0         0.0  1.734859e+09  09/10/2017      R         M        H   \n",
       "2  61485978.0         0.0  1.790318e+09  11/01/2018      R         M        H   \n",
       "3  97403657.0         0.0  1.897316e+09  04/07/2018      R         M        H   \n",
       "4  97792860.0         0.0  1.917632e+09  11/08/2018      R         M        H   \n",
       "\n",
       "         USERID TRANSTYPE    RISK                 ATAS_RULE  \n",
       "0    HostJacobA         R  Medium       Blacklisted Country  \n",
       "1   HostAlvaroL         R  Medium  First Second Transaction  \n",
       "2  HostRobertaC         R  Medium     Closed Frozen Account  \n",
       "3   HostMarvinU         R  Medium  First Second Transaction  \n",
       "4    HostFabioS         R  Medium          Possible Hacking  "
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import pandas as pd\n",
    "ATAS_Alerts = pd.read_csv('Desktop/UCD/Assignment/ATAS Withdrawals Jun_Jul.csv')\n",
    "ATAS_Alerts.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "5d405508-924d-4be5-9890-92d82dcecab1",
   "metadata": {
    "scrolled": true,
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 37827 entries, 0 to 37826\n",
      "Data columns (total 11 columns):\n",
      " #   Column      Non-Null Count  Dtype  \n",
      "---  ------      --------------  -----  \n",
      " 0   USERINTID   37824 non-null  float64\n",
      " 1   VIP_STATUS  37824 non-null  float64\n",
      " 2   TRANSID     37824 non-null  float64\n",
      " 3   STARTED     37824 non-null  object \n",
      " 4   STATUS      37824 non-null  object \n",
      " 5   OLDSTATUS   37824 non-null  object \n",
      " 6   STATUS.1    37824 non-null  object \n",
      " 7   USERID      37824 non-null  object \n",
      " 8   TRANSTYPE   37824 non-null  object \n",
      " 9   RISK        37824 non-null  object \n",
      " 10  ATAS_RULE   37824 non-null  object \n",
      "dtypes: float64(3), object(8)\n",
      "memory usage: 3.2+ MB\n"
     ]
    }
   ],
   "source": [
    "ATAS_Alerts.info()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "73b83903-4250-4762-b8b8-feb1451a1d8b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(37827, 11)"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ATAS_Alerts.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "35559fa5-0532-443e-b0d3-2cd5cb82146c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>USERINTID</th>\n",
       "      <th>VIP_STATUS</th>\n",
       "      <th>TRANSID</th>\n",
       "      <th>STARTED</th>\n",
       "      <th>STATUS</th>\n",
       "      <th>OLDSTATUS</th>\n",
       "      <th>STATUS.1</th>\n",
       "      <th>USERID</th>\n",
       "      <th>TRANSTYPE</th>\n",
       "      <th>RISK</th>\n",
       "      <th>ATAS_RULE</th>\n",
       "      <th>Rule_Status</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>49031629.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.277915e+09</td>\n",
       "      <td>23/06/2015</td>\n",
       "      <td>R</td>\n",
       "      <td>M</td>\n",
       "      <td>H</td>\n",
       "      <td>HostJacobA</td>\n",
       "      <td>R</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Blacklisted Country</td>\n",
       "      <td>Blacklisted CountryR</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>90157295.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.734859e+09</td>\n",
       "      <td>09/10/2017</td>\n",
       "      <td>R</td>\n",
       "      <td>M</td>\n",
       "      <td>H</td>\n",
       "      <td>HostAlvaroL</td>\n",
       "      <td>R</td>\n",
       "      <td>Medium</td>\n",
       "      <td>First Second Transaction</td>\n",
       "      <td>First Second TransactionR</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>61485978.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.790318e+09</td>\n",
       "      <td>11/01/2018</td>\n",
       "      <td>R</td>\n",
       "      <td>M</td>\n",
       "      <td>H</td>\n",
       "      <td>HostRobertaC</td>\n",
       "      <td>R</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Closed Frozen Account</td>\n",
       "      <td>Closed Frozen AccountR</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    USERINTID  VIP_STATUS       TRANSID     STARTED STATUS OLDSTATUS STATUS.1  \\\n",
       "0  49031629.0         0.0  1.277915e+09  23/06/2015      R         M        H   \n",
       "1  90157295.0         0.0  1.734859e+09  09/10/2017      R         M        H   \n",
       "2  61485978.0         0.0  1.790318e+09  11/01/2018      R         M        H   \n",
       "\n",
       "         USERID TRANSTYPE    RISK                 ATAS_RULE  \\\n",
       "0    HostJacobA         R  Medium       Blacklisted Country   \n",
       "1   HostAlvaroL         R  Medium  First Second Transaction   \n",
       "2  HostRobertaC         R  Medium     Closed Frozen Account   \n",
       "\n",
       "                 Rule_Status  \n",
       "0       Blacklisted CountryR  \n",
       "1  First Second TransactionR  \n",
       "2     Closed Frozen AccountR  "
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ATAS_Alerts['Rule_Status'] = ATAS_Alerts['ATAS_RULE'] + ATAS_Alerts['STATUS']\n",
    "ATAS_Alerts.head(3)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fcd60fc3-cbeb-4289-9d32-49ab929d3b54",
   "metadata": {},
   "source": [
    "__ATAS Withdrawal Alerts Per Rule__"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "fa14e683-9cf5-449c-9114-008e9084fcde",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ATAS_RULE</th>\n",
       "      <th>USERINTID</th>\n",
       "      <th>VIP_STATUS</th>\n",
       "      <th>TRANSID</th>\n",
       "      <th>STARTED</th>\n",
       "      <th>STATUS</th>\n",
       "      <th>OLDSTATUS</th>\n",
       "      <th>STATUS.1</th>\n",
       "      <th>USERID</th>\n",
       "      <th>TRANSTYPE</th>\n",
       "      <th>RISK</th>\n",
       "      <th>Rule_Status</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>-</td>\n",
       "      <td>7417</td>\n",
       "      <td>7417</td>\n",
       "      <td>7417</td>\n",
       "      <td>7417</td>\n",
       "      <td>7417</td>\n",
       "      <td>7417</td>\n",
       "      <td>7417</td>\n",
       "      <td>7417</td>\n",
       "      <td>7417</td>\n",
       "      <td>7417</td>\n",
       "      <td>7417</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Blacklisted Country</td>\n",
       "      <td>1111</td>\n",
       "      <td>1111</td>\n",
       "      <td>1111</td>\n",
       "      <td>1111</td>\n",
       "      <td>1111</td>\n",
       "      <td>1111</td>\n",
       "      <td>1111</td>\n",
       "      <td>1111</td>\n",
       "      <td>1111</td>\n",
       "      <td>1111</td>\n",
       "      <td>1111</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Blacklisted ISP</td>\n",
       "      <td>13</td>\n",
       "      <td>13</td>\n",
       "      <td>13</td>\n",
       "      <td>13</td>\n",
       "      <td>13</td>\n",
       "      <td>13</td>\n",
       "      <td>13</td>\n",
       "      <td>13</td>\n",
       "      <td>13</td>\n",
       "      <td>13</td>\n",
       "      <td>13</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Bonus Trackcode</td>\n",
       "      <td>47</td>\n",
       "      <td>47</td>\n",
       "      <td>47</td>\n",
       "      <td>47</td>\n",
       "      <td>47</td>\n",
       "      <td>47</td>\n",
       "      <td>47</td>\n",
       "      <td>47</td>\n",
       "      <td>47</td>\n",
       "      <td>47</td>\n",
       "      <td>47</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>CSI Withdrawal Alerts</td>\n",
       "      <td>803</td>\n",
       "      <td>803</td>\n",
       "      <td>803</td>\n",
       "      <td>803</td>\n",
       "      <td>803</td>\n",
       "      <td>803</td>\n",
       "      <td>803</td>\n",
       "      <td>803</td>\n",
       "      <td>803</td>\n",
       "      <td>803</td>\n",
       "      <td>803</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "               ATAS_RULE  USERINTID  VIP_STATUS  TRANSID  STARTED  STATUS  \\\n",
       "0                      -       7417        7417     7417     7417    7417   \n",
       "1    Blacklisted Country       1111        1111     1111     1111    1111   \n",
       "2        Blacklisted ISP         13          13       13       13      13   \n",
       "3        Bonus Trackcode         47          47       47       47      47   \n",
       "4  CSI Withdrawal Alerts        803         803      803      803     803   \n",
       "\n",
       "   OLDSTATUS  STATUS.1  USERID  TRANSTYPE  RISK  Rule_Status  \n",
       "0       7417      7417    7417       7417  7417         7417  \n",
       "1       1111      1111    1111       1111  1111         1111  \n",
       "2         13        13      13         13    13           13  \n",
       "3         47        47      47         47    47           47  \n",
       "4        803       803     803        803   803          803  "
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Alerts_Per_Rule = ATAS_Alerts.groupby(['ATAS_RULE']).count().reset_index()\n",
    "Alerts_Per_Rule.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "1a41baf3-0e40-4e26-b67d-74a31f6fabf9",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 28 entries, 0 to 27\n",
      "Data columns (total 12 columns):\n",
      " #   Column       Non-Null Count  Dtype \n",
      "---  ------       --------------  ----- \n",
      " 0   ATAS_RULE    28 non-null     object\n",
      " 1   USERINTID    28 non-null     int64 \n",
      " 2   VIP_STATUS   28 non-null     int64 \n",
      " 3   TRANSID      28 non-null     int64 \n",
      " 4   STARTED      28 non-null     int64 \n",
      " 5   STATUS       28 non-null     int64 \n",
      " 6   OLDSTATUS    28 non-null     int64 \n",
      " 7   STATUS.1     28 non-null     int64 \n",
      " 8   USERID       28 non-null     int64 \n",
      " 9   TRANSTYPE    28 non-null     int64 \n",
      " 10  RISK         28 non-null     int64 \n",
      " 11  Rule_Status  28 non-null     int64 \n",
      "dtypes: int64(11), object(1)\n",
      "memory usage: 2.8+ KB\n"
     ]
    }
   ],
   "source": [
    "Alerts_Per_Rule.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "e5d9a648-568d-46a3-9df2-a3cfa903a1d0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ATAS_RULE</th>\n",
       "      <th>Rule_Status</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>-</td>\n",
       "      <td>7417</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Blacklisted Country</td>\n",
       "      <td>1111</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Blacklisted ISP</td>\n",
       "      <td>13</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             ATAS_RULE  Rule_Status\n",
       "0                    -         7417\n",
       "1  Blacklisted Country         1111\n",
       "2      Blacklisted ISP           13"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Count_Alerts = Alerts_Per_Rule[['ATAS_RULE', 'Rule_Status']]\n",
    "Count_Alerts.head(3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "36e30d09-5e6b-4afb-bf79-9144353873ad",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(28, 2)"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Count_Alerts.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "f40ec86c-073b-48f1-9959-b7070b663d89",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "ATAS_RULE      object\n",
       "Rule_Status     int64\n",
       "dtype: object"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Count_Alerts.dtypes"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c19153e0-8bab-4b44-9a42-4e6dfe23f730",
   "metadata": {},
   "source": [
    "__Numer of Withdrawals Correctly Flagged as Fraudulent per Rule__"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "0e7b05ad-7e7b-4e43-ba57-10dca081a3e2",
   "metadata": {},
   "outputs": [],
   "source": [
    "def effective_rules(df):\n",
    "    if df in ['R']:\n",
    "        return 'Effective'\n",
    "    else:\n",
    "        return \"FalseAlarm\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "b839fff2-10e4-4c2f-ada9-fb0235b528fa",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>USERINTID</th>\n",
       "      <th>VIP_STATUS</th>\n",
       "      <th>TRANSID</th>\n",
       "      <th>STARTED</th>\n",
       "      <th>STATUS</th>\n",
       "      <th>OLDSTATUS</th>\n",
       "      <th>STATUS.1</th>\n",
       "      <th>USERID</th>\n",
       "      <th>TRANSTYPE</th>\n",
       "      <th>RISK</th>\n",
       "      <th>ATAS_RULE</th>\n",
       "      <th>Rule_Status</th>\n",
       "      <th>Effective_Rules</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>49031629.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.277915e+09</td>\n",
       "      <td>23/06/2015</td>\n",
       "      <td>R</td>\n",
       "      <td>M</td>\n",
       "      <td>H</td>\n",
       "      <td>HostJacobA</td>\n",
       "      <td>R</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Blacklisted Country</td>\n",
       "      <td>Blacklisted CountryR</td>\n",
       "      <td>Effective</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>90157295.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.734859e+09</td>\n",
       "      <td>09/10/2017</td>\n",
       "      <td>R</td>\n",
       "      <td>M</td>\n",
       "      <td>H</td>\n",
       "      <td>HostAlvaroL</td>\n",
       "      <td>R</td>\n",
       "      <td>Medium</td>\n",
       "      <td>First Second Transaction</td>\n",
       "      <td>First Second TransactionR</td>\n",
       "      <td>Effective</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>61485978.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.790318e+09</td>\n",
       "      <td>11/01/2018</td>\n",
       "      <td>R</td>\n",
       "      <td>M</td>\n",
       "      <td>H</td>\n",
       "      <td>HostRobertaC</td>\n",
       "      <td>R</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Closed Frozen Account</td>\n",
       "      <td>Closed Frozen AccountR</td>\n",
       "      <td>Effective</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>97403657.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.897316e+09</td>\n",
       "      <td>04/07/2018</td>\n",
       "      <td>R</td>\n",
       "      <td>M</td>\n",
       "      <td>H</td>\n",
       "      <td>HostMarvinU</td>\n",
       "      <td>R</td>\n",
       "      <td>Medium</td>\n",
       "      <td>First Second Transaction</td>\n",
       "      <td>First Second TransactionR</td>\n",
       "      <td>Effective</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>97792860.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.917632e+09</td>\n",
       "      <td>11/08/2018</td>\n",
       "      <td>R</td>\n",
       "      <td>M</td>\n",
       "      <td>H</td>\n",
       "      <td>HostFabioS</td>\n",
       "      <td>R</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Possible Hacking</td>\n",
       "      <td>Possible HackingR</td>\n",
       "      <td>Effective</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>11850480.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.962647e+09</td>\n",
       "      <td>02/11/2018</td>\n",
       "      <td>R</td>\n",
       "      <td>M</td>\n",
       "      <td>H</td>\n",
       "      <td>HostEnricoD</td>\n",
       "      <td>R</td>\n",
       "      <td>Medium</td>\n",
       "      <td>KYC Score</td>\n",
       "      <td>KYC ScoreR</td>\n",
       "      <td>Effective</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>100096296.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.989534e+09</td>\n",
       "      <td>19/12/2018</td>\n",
       "      <td>A</td>\n",
       "      <td>M</td>\n",
       "      <td>H</td>\n",
       "      <td>HostAlinaL</td>\n",
       "      <td>R</td>\n",
       "      <td>Medium</td>\n",
       "      <td>First Second Transaction</td>\n",
       "      <td>First Second TransactionA</td>\n",
       "      <td>FalseAlarm</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>98915645.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.993390e+09</td>\n",
       "      <td>25/12/2018</td>\n",
       "      <td>A</td>\n",
       "      <td>M</td>\n",
       "      <td>H</td>\n",
       "      <td>HostDiegoS</td>\n",
       "      <td>R</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Blacklisted Country</td>\n",
       "      <td>Blacklisted CountryA</td>\n",
       "      <td>FalseAlarm</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>65437167.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.006303e+09</td>\n",
       "      <td>15/01/2019</td>\n",
       "      <td>R</td>\n",
       "      <td>M</td>\n",
       "      <td>H</td>\n",
       "      <td>HostMarioP</td>\n",
       "      <td>R</td>\n",
       "      <td>Medium</td>\n",
       "      <td>New Cashout Instrument</td>\n",
       "      <td>New Cashout InstrumentR</td>\n",
       "      <td>Effective</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>103183800.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.075932e+09</td>\n",
       "      <td>17/05/2019</td>\n",
       "      <td>R</td>\n",
       "      <td>M</td>\n",
       "      <td>H</td>\n",
       "      <td>HostBalazsK</td>\n",
       "      <td>R</td>\n",
       "      <td>Medium</td>\n",
       "      <td>First Second Transaction</td>\n",
       "      <td>First Second TransactionR</td>\n",
       "      <td>Effective</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     USERINTID  VIP_STATUS       TRANSID     STARTED STATUS OLDSTATUS  \\\n",
       "0   49031629.0         0.0  1.277915e+09  23/06/2015      R         M   \n",
       "1   90157295.0         0.0  1.734859e+09  09/10/2017      R         M   \n",
       "2   61485978.0         0.0  1.790318e+09  11/01/2018      R         M   \n",
       "3   97403657.0         0.0  1.897316e+09  04/07/2018      R         M   \n",
       "4   97792860.0         0.0  1.917632e+09  11/08/2018      R         M   \n",
       "5   11850480.0         0.0  1.962647e+09  02/11/2018      R         M   \n",
       "6  100096296.0         0.0  1.989534e+09  19/12/2018      A         M   \n",
       "7   98915645.0         0.0  1.993390e+09  25/12/2018      A         M   \n",
       "8   65437167.0         0.0  2.006303e+09  15/01/2019      R         M   \n",
       "9  103183800.0         0.0  2.075932e+09  17/05/2019      R         M   \n",
       "\n",
       "  STATUS.1        USERID TRANSTYPE    RISK                 ATAS_RULE  \\\n",
       "0        H    HostJacobA         R  Medium       Blacklisted Country   \n",
       "1        H   HostAlvaroL         R  Medium  First Second Transaction   \n",
       "2        H  HostRobertaC         R  Medium     Closed Frozen Account   \n",
       "3        H   HostMarvinU         R  Medium  First Second Transaction   \n",
       "4        H    HostFabioS         R  Medium          Possible Hacking   \n",
       "5        H   HostEnricoD         R  Medium                 KYC Score   \n",
       "6        H    HostAlinaL         R  Medium  First Second Transaction   \n",
       "7        H    HostDiegoS         R  Medium       Blacklisted Country   \n",
       "8        H    HostMarioP         R  Medium    New Cashout Instrument   \n",
       "9        H   HostBalazsK         R  Medium  First Second Transaction   \n",
       "\n",
       "                 Rule_Status Effective_Rules  \n",
       "0       Blacklisted CountryR       Effective  \n",
       "1  First Second TransactionR       Effective  \n",
       "2     Closed Frozen AccountR       Effective  \n",
       "3  First Second TransactionR       Effective  \n",
       "4          Possible HackingR       Effective  \n",
       "5                 KYC ScoreR       Effective  \n",
       "6  First Second TransactionA      FalseAlarm  \n",
       "7       Blacklisted CountryA      FalseAlarm  \n",
       "8    New Cashout InstrumentR       Effective  \n",
       "9  First Second TransactionR       Effective  "
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ATAS_Alerts['Effective_Rules'] = ATAS_Alerts['STATUS'].apply(effective_rules)\n",
    "ATAS_Alerts.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "e1b76be2-0093-430e-a02c-127335863926",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>USERINTID</th>\n",
       "      <th>VIP_STATUS</th>\n",
       "      <th>TRANSID</th>\n",
       "      <th>STARTED</th>\n",
       "      <th>STATUS</th>\n",
       "      <th>OLDSTATUS</th>\n",
       "      <th>STATUS.1</th>\n",
       "      <th>USERID</th>\n",
       "      <th>TRANSTYPE</th>\n",
       "      <th>RISK</th>\n",
       "      <th>ATAS_RULE</th>\n",
       "      <th>Rule_Status</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Effective_Rules</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Effective</th>\n",
       "      <td>49031629.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.277915e+09</td>\n",
       "      <td>23/06/2015</td>\n",
       "      <td>R</td>\n",
       "      <td>M</td>\n",
       "      <td>H</td>\n",
       "      <td>HostJacobA</td>\n",
       "      <td>R</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Blacklisted Country</td>\n",
       "      <td>Blacklisted CountryR</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Effective</th>\n",
       "      <td>90157295.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.734859e+09</td>\n",
       "      <td>09/10/2017</td>\n",
       "      <td>R</td>\n",
       "      <td>M</td>\n",
       "      <td>H</td>\n",
       "      <td>HostAlvaroL</td>\n",
       "      <td>R</td>\n",
       "      <td>Medium</td>\n",
       "      <td>First Second Transaction</td>\n",
       "      <td>First Second TransactionR</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Effective</th>\n",
       "      <td>61485978.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.790318e+09</td>\n",
       "      <td>11/01/2018</td>\n",
       "      <td>R</td>\n",
       "      <td>M</td>\n",
       "      <td>H</td>\n",
       "      <td>HostRobertaC</td>\n",
       "      <td>R</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Closed Frozen Account</td>\n",
       "      <td>Closed Frozen AccountR</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Effective</th>\n",
       "      <td>97403657.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.897316e+09</td>\n",
       "      <td>04/07/2018</td>\n",
       "      <td>R</td>\n",
       "      <td>M</td>\n",
       "      <td>H</td>\n",
       "      <td>HostMarvinU</td>\n",
       "      <td>R</td>\n",
       "      <td>Medium</td>\n",
       "      <td>First Second Transaction</td>\n",
       "      <td>First Second TransactionR</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Effective</th>\n",
       "      <td>97792860.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.917632e+09</td>\n",
       "      <td>11/08/2018</td>\n",
       "      <td>R</td>\n",
       "      <td>M</td>\n",
       "      <td>H</td>\n",
       "      <td>HostFabioS</td>\n",
       "      <td>R</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Possible Hacking</td>\n",
       "      <td>Possible HackingR</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Effective</th>\n",
       "      <td>11850480.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.962647e+09</td>\n",
       "      <td>02/11/2018</td>\n",
       "      <td>R</td>\n",
       "      <td>M</td>\n",
       "      <td>H</td>\n",
       "      <td>HostEnricoD</td>\n",
       "      <td>R</td>\n",
       "      <td>Medium</td>\n",
       "      <td>KYC Score</td>\n",
       "      <td>KYC ScoreR</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>FalseAlarm</th>\n",
       "      <td>100096296.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.989534e+09</td>\n",
       "      <td>19/12/2018</td>\n",
       "      <td>A</td>\n",
       "      <td>M</td>\n",
       "      <td>H</td>\n",
       "      <td>HostAlinaL</td>\n",
       "      <td>R</td>\n",
       "      <td>Medium</td>\n",
       "      <td>First Second Transaction</td>\n",
       "      <td>First Second TransactionA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>FalseAlarm</th>\n",
       "      <td>98915645.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.993390e+09</td>\n",
       "      <td>25/12/2018</td>\n",
       "      <td>A</td>\n",
       "      <td>M</td>\n",
       "      <td>H</td>\n",
       "      <td>HostDiegoS</td>\n",
       "      <td>R</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Blacklisted Country</td>\n",
       "      <td>Blacklisted CountryA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Effective</th>\n",
       "      <td>65437167.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.006303e+09</td>\n",
       "      <td>15/01/2019</td>\n",
       "      <td>R</td>\n",
       "      <td>M</td>\n",
       "      <td>H</td>\n",
       "      <td>HostMarioP</td>\n",
       "      <td>R</td>\n",
       "      <td>Medium</td>\n",
       "      <td>New Cashout Instrument</td>\n",
       "      <td>New Cashout InstrumentR</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Effective</th>\n",
       "      <td>103183800.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.075932e+09</td>\n",
       "      <td>17/05/2019</td>\n",
       "      <td>R</td>\n",
       "      <td>M</td>\n",
       "      <td>H</td>\n",
       "      <td>HostBalazsK</td>\n",
       "      <td>R</td>\n",
       "      <td>Medium</td>\n",
       "      <td>First Second Transaction</td>\n",
       "      <td>First Second TransactionR</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                   USERINTID  VIP_STATUS       TRANSID     STARTED STATUS  \\\n",
       "Effective_Rules                                                             \n",
       "Effective         49031629.0         0.0  1.277915e+09  23/06/2015      R   \n",
       "Effective         90157295.0         0.0  1.734859e+09  09/10/2017      R   \n",
       "Effective         61485978.0         0.0  1.790318e+09  11/01/2018      R   \n",
       "Effective         97403657.0         0.0  1.897316e+09  04/07/2018      R   \n",
       "Effective         97792860.0         0.0  1.917632e+09  11/08/2018      R   \n",
       "Effective         11850480.0         0.0  1.962647e+09  02/11/2018      R   \n",
       "FalseAlarm       100096296.0         0.0  1.989534e+09  19/12/2018      A   \n",
       "FalseAlarm        98915645.0         0.0  1.993390e+09  25/12/2018      A   \n",
       "Effective         65437167.0         0.0  2.006303e+09  15/01/2019      R   \n",
       "Effective        103183800.0         0.0  2.075932e+09  17/05/2019      R   \n",
       "\n",
       "                OLDSTATUS STATUS.1        USERID TRANSTYPE    RISK  \\\n",
       "Effective_Rules                                                      \n",
       "Effective               M        H    HostJacobA         R  Medium   \n",
       "Effective               M        H   HostAlvaroL         R  Medium   \n",
       "Effective               M        H  HostRobertaC         R  Medium   \n",
       "Effective               M        H   HostMarvinU         R  Medium   \n",
       "Effective               M        H    HostFabioS         R  Medium   \n",
       "Effective               M        H   HostEnricoD         R  Medium   \n",
       "FalseAlarm              M        H    HostAlinaL         R  Medium   \n",
       "FalseAlarm              M        H    HostDiegoS         R  Medium   \n",
       "Effective               M        H    HostMarioP         R  Medium   \n",
       "Effective               M        H   HostBalazsK         R  Medium   \n",
       "\n",
       "                                ATAS_RULE                Rule_Status  \n",
       "Effective_Rules                                                       \n",
       "Effective             Blacklisted Country       Blacklisted CountryR  \n",
       "Effective        First Second Transaction  First Second TransactionR  \n",
       "Effective           Closed Frozen Account     Closed Frozen AccountR  \n",
       "Effective        First Second Transaction  First Second TransactionR  \n",
       "Effective                Possible Hacking          Possible HackingR  \n",
       "Effective                       KYC Score                 KYC ScoreR  \n",
       "FalseAlarm       First Second Transaction  First Second TransactionA  \n",
       "FalseAlarm            Blacklisted Country       Blacklisted CountryA  \n",
       "Effective          New Cashout Instrument    New Cashout InstrumentR  \n",
       "Effective        First Second Transaction  First Second TransactionR  "
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Effectve_Alerts = ATAS_Alerts.set_index('Effective_Rules')\n",
    "Effectve_Alerts.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "321924a7-299e-4e28-8482-045cfa07adeb",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>USERINTID</th>\n",
       "      <th>VIP_STATUS</th>\n",
       "      <th>TRANSID</th>\n",
       "      <th>STARTED</th>\n",
       "      <th>STATUS</th>\n",
       "      <th>OLDSTATUS</th>\n",
       "      <th>STATUS.1</th>\n",
       "      <th>USERID</th>\n",
       "      <th>TRANSTYPE</th>\n",
       "      <th>RISK</th>\n",
       "      <th>ATAS_RULE</th>\n",
       "      <th>Rule_Status</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Effective_Rules</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Effective</th>\n",
       "      <td>49031629.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.277915e+09</td>\n",
       "      <td>23/06/2015</td>\n",
       "      <td>R</td>\n",
       "      <td>M</td>\n",
       "      <td>H</td>\n",
       "      <td>HostJacobA</td>\n",
       "      <td>R</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Blacklisted Country</td>\n",
       "      <td>Blacklisted CountryR</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Effective</th>\n",
       "      <td>90157295.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.734859e+09</td>\n",
       "      <td>09/10/2017</td>\n",
       "      <td>R</td>\n",
       "      <td>M</td>\n",
       "      <td>H</td>\n",
       "      <td>HostAlvaroL</td>\n",
       "      <td>R</td>\n",
       "      <td>Medium</td>\n",
       "      <td>First Second Transaction</td>\n",
       "      <td>First Second TransactionR</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Effective</th>\n",
       "      <td>61485978.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.790318e+09</td>\n",
       "      <td>11/01/2018</td>\n",
       "      <td>R</td>\n",
       "      <td>M</td>\n",
       "      <td>H</td>\n",
       "      <td>HostRobertaC</td>\n",
       "      <td>R</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Closed Frozen Account</td>\n",
       "      <td>Closed Frozen AccountR</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Effective</th>\n",
       "      <td>97403657.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.897316e+09</td>\n",
       "      <td>04/07/2018</td>\n",
       "      <td>R</td>\n",
       "      <td>M</td>\n",
       "      <td>H</td>\n",
       "      <td>HostMarvinU</td>\n",
       "      <td>R</td>\n",
       "      <td>Medium</td>\n",
       "      <td>First Second Transaction</td>\n",
       "      <td>First Second TransactionR</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Effective</th>\n",
       "      <td>97792860.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.917632e+09</td>\n",
       "      <td>11/08/2018</td>\n",
       "      <td>R</td>\n",
       "      <td>M</td>\n",
       "      <td>H</td>\n",
       "      <td>HostFabioS</td>\n",
       "      <td>R</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Possible Hacking</td>\n",
       "      <td>Possible HackingR</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                  USERINTID  VIP_STATUS       TRANSID     STARTED STATUS  \\\n",
       "Effective_Rules                                                            \n",
       "Effective        49031629.0         0.0  1.277915e+09  23/06/2015      R   \n",
       "Effective        90157295.0         0.0  1.734859e+09  09/10/2017      R   \n",
       "Effective        61485978.0         0.0  1.790318e+09  11/01/2018      R   \n",
       "Effective        97403657.0         0.0  1.897316e+09  04/07/2018      R   \n",
       "Effective        97792860.0         0.0  1.917632e+09  11/08/2018      R   \n",
       "\n",
       "                OLDSTATUS STATUS.1        USERID TRANSTYPE    RISK  \\\n",
       "Effective_Rules                                                      \n",
       "Effective               M        H    HostJacobA         R  Medium   \n",
       "Effective               M        H   HostAlvaroL         R  Medium   \n",
       "Effective               M        H  HostRobertaC         R  Medium   \n",
       "Effective               M        H   HostMarvinU         R  Medium   \n",
       "Effective               M        H    HostFabioS         R  Medium   \n",
       "\n",
       "                                ATAS_RULE                Rule_Status  \n",
       "Effective_Rules                                                       \n",
       "Effective             Blacklisted Country       Blacklisted CountryR  \n",
       "Effective        First Second Transaction  First Second TransactionR  \n",
       "Effective           Closed Frozen Account     Closed Frozen AccountR  \n",
       "Effective        First Second Transaction  First Second TransactionR  \n",
       "Effective                Possible Hacking          Possible HackingR  "
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Effective_Alerts = Effectve_Alerts.drop('FalseAlarm')\n",
    "Effective_Alerts.head(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "719e24a2-c35e-4564-815e-aa907404634e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ATAS_RULE</th>\n",
       "      <th>USERINTID</th>\n",
       "      <th>VIP_STATUS</th>\n",
       "      <th>TRANSID</th>\n",
       "      <th>STARTED</th>\n",
       "      <th>STATUS</th>\n",
       "      <th>OLDSTATUS</th>\n",
       "      <th>STATUS.1</th>\n",
       "      <th>USERID</th>\n",
       "      <th>TRANSTYPE</th>\n",
       "      <th>RISK</th>\n",
       "      <th>Rule_Status</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>-</td>\n",
       "      <td>1707</td>\n",
       "      <td>1707</td>\n",
       "      <td>1707</td>\n",
       "      <td>1707</td>\n",
       "      <td>1707</td>\n",
       "      <td>1707</td>\n",
       "      <td>1707</td>\n",
       "      <td>1707</td>\n",
       "      <td>1707</td>\n",
       "      <td>1707</td>\n",
       "      <td>1707</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Blacklisted Country</td>\n",
       "      <td>88</td>\n",
       "      <td>88</td>\n",
       "      <td>88</td>\n",
       "      <td>88</td>\n",
       "      <td>88</td>\n",
       "      <td>88</td>\n",
       "      <td>88</td>\n",
       "      <td>88</td>\n",
       "      <td>88</td>\n",
       "      <td>88</td>\n",
       "      <td>88</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Bonus Trackcode</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>CSI Withdrawal Alerts</td>\n",
       "      <td>242</td>\n",
       "      <td>242</td>\n",
       "      <td>242</td>\n",
       "      <td>242</td>\n",
       "      <td>242</td>\n",
       "      <td>242</td>\n",
       "      <td>242</td>\n",
       "      <td>242</td>\n",
       "      <td>242</td>\n",
       "      <td>242</td>\n",
       "      <td>242</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Cashout Cancelled</td>\n",
       "      <td>61</td>\n",
       "      <td>61</td>\n",
       "      <td>61</td>\n",
       "      <td>61</td>\n",
       "      <td>61</td>\n",
       "      <td>61</td>\n",
       "      <td>61</td>\n",
       "      <td>61</td>\n",
       "      <td>61</td>\n",
       "      <td>61</td>\n",
       "      <td>61</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "               ATAS_RULE  USERINTID  VIP_STATUS  TRANSID  STARTED  STATUS  \\\n",
       "0                      -       1707        1707     1707     1707    1707   \n",
       "1    Blacklisted Country         88          88       88       88      88   \n",
       "2        Bonus Trackcode          9           9        9        9       9   \n",
       "3  CSI Withdrawal Alerts        242         242      242      242     242   \n",
       "4      Cashout Cancelled         61          61       61       61      61   \n",
       "\n",
       "   OLDSTATUS  STATUS.1  USERID  TRANSTYPE  RISK  Rule_Status  \n",
       "0       1707      1707    1707       1707  1707         1707  \n",
       "1         88        88      88         88    88           88  \n",
       "2          9         9       9          9     9            9  \n",
       "3        242       242     242        242   242          242  \n",
       "4         61        61      61         61    61           61  "
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "CountEffectiveAlerts = Effective_Alerts.groupby('ATAS_RULE').count().reset_index()\n",
    "CountEffectiveAlerts.head(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "964eb01e-a908-40b7-b30a-83c9362da483",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ATAS_RULE</th>\n",
       "      <th>STATUS</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>-</td>\n",
       "      <td>1707</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Blacklisted Country</td>\n",
       "      <td>88</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Bonus Trackcode</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             ATAS_RULE  STATUS\n",
       "0                    -    1707\n",
       "1  Blacklisted Country      88\n",
       "2      Bonus Trackcode       9"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "CountEffectiveAlerts = CountEffectiveAlerts[['ATAS_RULE', 'STATUS']]\n",
    "CountEffectiveAlerts.head(3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "5825e61a-1d77-4f21-82e2-8e33c6eb27f4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(24, 2)"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "CountEffectiveAlerts.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "a4625325-482d-423d-9f84-71e3944e856f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ATAS_RULE</th>\n",
       "      <th>Rule_Status</th>\n",
       "      <th>STATUS</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>-</td>\n",
       "      <td>7417</td>\n",
       "      <td>1707.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Blacklisted Country</td>\n",
       "      <td>1111</td>\n",
       "      <td>88.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Blacklisted ISP</td>\n",
       "      <td>13</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Bonus Trackcode</td>\n",
       "      <td>47</td>\n",
       "      <td>9.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>CSI Withdrawal Alerts</td>\n",
       "      <td>803</td>\n",
       "      <td>242.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Cashout Cancelled</td>\n",
       "      <td>375</td>\n",
       "      <td>61.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Closed Frozen Account</td>\n",
       "      <td>1</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>Country Mismatch</td>\n",
       "      <td>4637</td>\n",
       "      <td>464.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "               ATAS_RULE  Rule_Status  STATUS\n",
       "0                      -         7417  1707.0\n",
       "1    Blacklisted Country         1111    88.0\n",
       "2        Blacklisted ISP           13     NaN\n",
       "3        Bonus Trackcode           47     9.0\n",
       "4  CSI Withdrawal Alerts          803   242.0\n",
       "5      Cashout Cancelled          375    61.0\n",
       "6  Closed Frozen Account            1     1.0\n",
       "7       Country Mismatch         4637   464.0"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Effective_Alerts = Count_Alerts.merge(CountEffectiveAlerts, how='outer')\n",
    "Effective_Alerts.head(8)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "01258b23-9eea-4790-b00d-ad5550219f1a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(28, 3)"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Effective_Alerts.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "5b5f4fd1-6333-4b86-b34b-dbe5b4af6b2c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ATAS_RULE</th>\n",
       "      <th>Rule_Status</th>\n",
       "      <th>STATUS</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>-</td>\n",
       "      <td>7417</td>\n",
       "      <td>1707.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Blacklisted Country</td>\n",
       "      <td>1111</td>\n",
       "      <td>88.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Blacklisted ISP</td>\n",
       "      <td>13</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Bonus Trackcode</td>\n",
       "      <td>47</td>\n",
       "      <td>9.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>CSI Withdrawal Alerts</td>\n",
       "      <td>803</td>\n",
       "      <td>242.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Cashout Cancelled</td>\n",
       "      <td>375</td>\n",
       "      <td>61.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Closed Frozen Account</td>\n",
       "      <td>1</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>Country Mismatch</td>\n",
       "      <td>4637</td>\n",
       "      <td>464.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "               ATAS_RULE  Rule_Status  STATUS\n",
       "0                      -         7417  1707.0\n",
       "1    Blacklisted Country         1111    88.0\n",
       "2        Blacklisted ISP           13     0.0\n",
       "3        Bonus Trackcode           47     9.0\n",
       "4  CSI Withdrawal Alerts          803   242.0\n",
       "5      Cashout Cancelled          375    61.0\n",
       "6  Closed Frozen Account            1     1.0\n",
       "7       Country Mismatch         4637   464.0"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Effective_Alerts[['Rule_Status', 'STATUS']] = Effective_Alerts[['Rule_Status', 'STATUS']].fillna(0)\n",
    "Effective_Alerts.head(8)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "554f9ad5-1a57-4a99-83f2-6021ad220a3f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Int64Index: 28 entries, 0 to 27\n",
      "Data columns (total 3 columns):\n",
      " #   Column       Non-Null Count  Dtype  \n",
      "---  ------       --------------  -----  \n",
      " 0   ATAS_RULE    28 non-null     object \n",
      " 1   Rule_Status  28 non-null     int64  \n",
      " 2   STATUS       28 non-null     float64\n",
      "dtypes: float64(1), int64(1), object(1)\n",
      "memory usage: 896.0+ bytes\n"
     ]
    }
   ],
   "source": [
    "Effective_Alerts.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "5f580f58-b29f-4daa-9c01-5da314cbefbe",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "ATAS_RULE       object\n",
       "Rule_Status    float64\n",
       "STATUS         float64\n",
       "dtype: object"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Effective_Alerts[\"Rule_Status\"] = Effective_Alerts[\"Rule_Status\"].astype('float64')\n",
    "Effective_Alerts.dtypes"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bd8dcf03-c600-4966-b8a3-6715c5c3fb39",
   "metadata": {},
   "source": [
    "__Percentage of Withdrawals Correctly Flagged per Rule__"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "dcb9ba9f-5003-4fc5-bf4f-d130bae3a232",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Int64Index([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16,\n",
       "            17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27],\n",
       "           dtype='int64')"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Effective_Alerts['PercentageEffective'] = (Effective_Alerts['STATUS'] / Effective_Alerts['Rule_Status'])*100\n",
    "Effective_Alerts.index"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "af4f95b7-f8b9-4a25-ada7-85b303cb466f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ATAS_RULE</th>\n",
       "      <th>Rule_Status</th>\n",
       "      <th>STATUS</th>\n",
       "      <th>PercentageEffective</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>-</td>\n",
       "      <td>7417.0</td>\n",
       "      <td>1707.0</td>\n",
       "      <td>23.014696</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Blacklisted Country</td>\n",
       "      <td>1111.0</td>\n",
       "      <td>88.0</td>\n",
       "      <td>7.920792</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Blacklisted ISP</td>\n",
       "      <td>13.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             ATAS_RULE  Rule_Status  STATUS  PercentageEffective\n",
       "0                    -       7417.0  1707.0            23.014696\n",
       "1  Blacklisted Country       1111.0    88.0             7.920792\n",
       "2      Blacklisted ISP         13.0     0.0             0.000000"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Effective_Alerts.head(3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "4fdb1ce8-935a-4f8d-b235-def2d92041e5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ATAS_RULE</th>\n",
       "      <th>Rule_Status</th>\n",
       "      <th>STATUS</th>\n",
       "      <th>PercentageEffective</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Blacklisted Country</td>\n",
       "      <td>1111.0</td>\n",
       "      <td>88.0</td>\n",
       "      <td>7.920792</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Blacklisted ISP</td>\n",
       "      <td>13.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Bonus Trackcode</td>\n",
       "      <td>47.0</td>\n",
       "      <td>9.0</td>\n",
       "      <td>19.148936</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>CSI Withdrawal Alerts</td>\n",
       "      <td>803.0</td>\n",
       "      <td>242.0</td>\n",
       "      <td>30.136986</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Cashout Cancelled</td>\n",
       "      <td>375.0</td>\n",
       "      <td>61.0</td>\n",
       "      <td>16.266667</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "               ATAS_RULE  Rule_Status  STATUS  PercentageEffective\n",
       "1    Blacklisted Country       1111.0    88.0             7.920792\n",
       "2        Blacklisted ISP         13.0     0.0             0.000000\n",
       "3        Bonus Trackcode         47.0     9.0            19.148936\n",
       "4  CSI Withdrawal Alerts        803.0   242.0            30.136986\n",
       "5      Cashout Cancelled        375.0    61.0            16.266667"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Effective = Effective_Alerts.drop([0])\n",
    "Effective.head(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "0f055ab7-cb2d-40a3-884f-323a75489fe1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "ATAS_RULE               object\n",
       "Rule_Status            float64\n",
       "STATUS                 float64\n",
       "PercentageEffective    float64\n",
       "dtype: object"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Effective.dtypes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "082ac152-6628-4b59-8c12-e996c9cc7841",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(27, 4)"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Effective.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "0bc3b8e5-991b-4eef-b165-bfc6318a53ca",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ATAS_RULE</th>\n",
       "      <th>Rule_Status</th>\n",
       "      <th>STATUS</th>\n",
       "      <th>PercentageEffective</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>Withdrawal With Dormancy</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Blacklisted ISP</td>\n",
       "      <td>13.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>Source Of Winnings</td>\n",
       "      <td>39.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>LtFPP Filter</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>Velocity Tests</td>\n",
       "      <td>386.0</td>\n",
       "      <td>15.0</td>\n",
       "      <td>3.886010</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>Limits Tests</td>\n",
       "      <td>1007.0</td>\n",
       "      <td>64.0</td>\n",
       "      <td>6.355511</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Blacklisted Country</td>\n",
       "      <td>1111.0</td>\n",
       "      <td>88.0</td>\n",
       "      <td>7.920792</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>Country Mismatch</td>\n",
       "      <td>4637.0</td>\n",
       "      <td>464.0</td>\n",
       "      <td>10.006470</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>First Second Transaction</td>\n",
       "      <td>3586.0</td>\n",
       "      <td>401.0</td>\n",
       "      <td>11.182376</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>Win Rate</td>\n",
       "      <td>266.0</td>\n",
       "      <td>31.0</td>\n",
       "      <td>11.654135</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                   ATAS_RULE  Rule_Status  STATUS  PercentageEffective\n",
       "27  Withdrawal With Dormancy          1.0     0.0             0.000000\n",
       "2            Blacklisted ISP         13.0     0.0             0.000000\n",
       "23        Source Of Winnings         39.0     0.0             0.000000\n",
       "17              LtFPP Filter          1.0     0.0             0.000000\n",
       "25            Velocity Tests        386.0    15.0             3.886010\n",
       "16              Limits Tests       1007.0    64.0             6.355511\n",
       "1        Blacklisted Country       1111.0    88.0             7.920792\n",
       "7           Country Mismatch       4637.0   464.0            10.006470\n",
       "10  First Second Transaction       3586.0   401.0            11.182376\n",
       "26                  Win Rate        266.0    31.0            11.654135"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Effective.sort_values(by=['PercentageEffective'], inplace=True)\n",
    "Effective.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "55e155e4-7993-4762-9aa4-80b559d6d6ce",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(27, 4)"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Effective.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "3869f5a2-fdb0-4299-8a33-254912f070ff",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ATAS_RULE</th>\n",
       "      <th>Rule_Status</th>\n",
       "      <th>STATUS</th>\n",
       "      <th>PercentageEffective</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>Withdrawal With Dormancy</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Blacklisted ISP</td>\n",
       "      <td>13.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>Source Of Winnings</td>\n",
       "      <td>39.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>LtFPP Filter</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>Velocity Tests</td>\n",
       "      <td>386.0</td>\n",
       "      <td>15.0</td>\n",
       "      <td>4.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>Limits Tests</td>\n",
       "      <td>1007.0</td>\n",
       "      <td>64.0</td>\n",
       "      <td>6.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Blacklisted Country</td>\n",
       "      <td>1111.0</td>\n",
       "      <td>88.0</td>\n",
       "      <td>8.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>Country Mismatch</td>\n",
       "      <td>4637.0</td>\n",
       "      <td>464.0</td>\n",
       "      <td>10.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>First Second Transaction</td>\n",
       "      <td>3586.0</td>\n",
       "      <td>401.0</td>\n",
       "      <td>11.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>Win Rate</td>\n",
       "      <td>266.0</td>\n",
       "      <td>31.0</td>\n",
       "      <td>12.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                   ATAS_RULE  Rule_Status  STATUS  PercentageEffective\n",
       "27  Withdrawal With Dormancy          1.0     0.0                  0.0\n",
       "2            Blacklisted ISP         13.0     0.0                  0.0\n",
       "23        Source Of Winnings         39.0     0.0                  0.0\n",
       "17              LtFPP Filter          1.0     0.0                  0.0\n",
       "25            Velocity Tests        386.0    15.0                  4.0\n",
       "16              Limits Tests       1007.0    64.0                  6.0\n",
       "1        Blacklisted Country       1111.0    88.0                  8.0\n",
       "7           Country Mismatch       4637.0   464.0                 10.0\n",
       "10  First Second Transaction       3586.0   401.0                 11.0\n",
       "26                  Win Rate        266.0    31.0                 12.0"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import numpy as np\n",
    "Rounded = Effective.round({\"PercentageEffective\":0})\n",
    "Rounded.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "f636fdf9-5fd2-4622-ac61-5242190bcfc0",
   "metadata": {},
   "outputs": [],
   "source": [
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "6ba6d015-2b58-4450-9a30-6f142d9af7d3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0, 0.5, 'ATAS Rule')"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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fBdV7Yz679xXqN6nB+hfTY9fUP23ouEW2y/6N2z7JqrVat+m+vf6ZInjHqpky+Es2Kqp/szxOapHQc9i3lNYHqT6PdndduO/lTdTrb67iaoo6bNUK6r+QvUeb+fqEd4REd3SwnsCWURERERERETEopUVHRERERERERHRMZLoiIiIiIiIiIiOkURHRERERERERHSMJDoiIiIiIiIiomPk8bLRkVZffXWPGDFisMOIiIiIiIiIhWDy5MkP2V6j1bkkOqIjjRgxgkmTJg12GBEREREREbEQSPpbd+eydSUiIiIiIiIiOkYSHRERERERERHRMZLoiIiIiIiIiIiOkURHRERERERERHSMJDoiIiIiIiIiomMk0RERERERERERHSOJjoiIiIiIiIjoGEl0RERERERERETHSKIjIiIiIiIiIjpGEh0RERERERER0TGS6IiIiIiIiIiIjpFER0RERERERER0jCQ6IiIiIiIiIqJjJNERERERERERER0jiY6IiIiIiIiI6BhJdEREREREREREx0iiIyIiIiIiIiI6RhIdEREREREREdExkuiIiIiIiIiIiI4h24MdQ8SA03CZgwc7ioiIiIiIiCWLxy0ZOQJJk213tTqXFR0RERERERER0TGS6OhwkmbXjneX9GdJV0n6eK399ZKmSVpG0tskTZL0R0l3SjqhxZhrSrpY0u2SZkq6dFHdT0RERERERERPlhnsAGLRkPQm4PvAbsBs4CZJ5wMPAycB/wNsVI7fbvtOScsAY1sM9yXg97a/W8befADiW8b28ws6TkRERERERAxtWdExBEjaCfgJVQLjr7b/DZwAfAP4GDDN9vXAZ4Cv2r4TwPbztn/YYsi1gH80XtieVpvrM5Kml9Uex5e2kZImllUjF0h6WWmfIOlrkq4BPiVplKRrJE2WdLmktRbKGxIREREREREdK4mOzrcc8Bvg3Y0ERnEysDFwJFWCA2BTYHIbY/4A+JmkqyUdJWk4gKS3Ae8GXm97C6pECsDpwP/Z3hyYDoyrjbWq7TcA36NacbKX7VHAz4Gv9vVmIyIiIiIiYmjL1pXO9xxwI/AR4FONRttzJf0Y6LL9cF8GtH25pNcAbwXeBkyRtCmwK3CK7SdLv0ckDaNKZlxTLj8NOK823Lnl+2upEi2/lwSwNHB/X+KSNJbGVpthfbkyIiIiIiIiOkVWdHS+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\n",
      "text/plain": [
       "<Figure size 1152x1296 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, (ax1, ax2) = plt.subplots(2, figsize =(16, 18))\n",
    "ax1.barh(Rounded['ATAS_RULE'], Rounded['PercentageEffective'], color = 'green' )\n",
    "ax1.xaxis.set_tick_params(pad = 5)\n",
    "ax1.yaxis.set_tick_params(pad = 10)\n",
    "major_ticks = np.arange(0, 101, 10)\n",
    "ax1.set_xticks(major_ticks)\n",
    "ax1.set_title('ATAS Withdrawal Rules Effectiveness', fontweight ='bold', fontsize = 18)\n",
    "ax1.set_xlabel('Effectiveness %', fontweight ='bold', fontsize = 14)\n",
    "ax1.set_ylabel('ATAS Rule', fontweight ='bold', fontsize = 14)\n",
    "ax2.barh(Rounded['ATAS_RULE'], Rounded['Rule_Status'], color = 'green' )\n",
    "ax2.set_title('ATAS Withdrawal Alerts', fontweight ='bold', fontsize = 18)\n",
    "ax2.set_xlabel('Total Alerts Per Rule', fontweight ='bold', fontsize = 14)\n",
    "plt.ylabel('ATAS Rule', fontweight ='bold', fontsize = 14)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d8bd6dd4-b64b-47ef-b91a-0f3d34997745",
   "metadata": {},
   "source": [
    "# Comparing Total Withdrawal and Transfer Requests in Week 1 versus Week 4 of a Month"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "af1c2c37-5684-4f2d-b3d6-4b1eca3dc3eb",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>USERINTID</th>\n",
       "      <th>VIP_STATUS</th>\n",
       "      <th>TRANSID</th>\n",
       "      <th>COMPLETION_DATE</th>\n",
       "      <th>USD_AMOUNT</th>\n",
       "      <th>ACCOUNT_CURRENCY</th>\n",
       "      <th>PAYSYSTEM</th>\n",
       "      <th>GATEWAY</th>\n",
       "      <th>ROLLBACK</th>\n",
       "      <th>OVERCREDIT</th>\n",
       "      <th>FINAL_STATUS</th>\n",
       "      <th>ATAS_SCREENING</th>\n",
       "      <th>RISK</th>\n",
       "      <th>ATAS_RULE</th>\n",
       "      <th>STATUS</th>\n",
       "      <th>OLDSTATUS</th>\n",
       "      <th>OUTCOME_POST_M</th>\n",
       "      <th>HOST_OUTCOME_POST_M</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>63786440</td>\n",
       "      <td>0</td>\n",
       "      <td>2680739487</td>\n",
       "      <td>25/07/2021</td>\n",
       "      <td>11.26</td>\n",
       "      <td>EUR</td>\n",
       "      <td>TAX</td>\n",
       "      <td>ADMIN</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>A</td>\n",
       "      <td>No</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>113590940</td>\n",
       "      <td>0</td>\n",
       "      <td>2680726130</td>\n",
       "      <td>25/07/2021</td>\n",
       "      <td>0</td>\n",
       "      <td>CAD</td>\n",
       "      <td>DIRBANK</td>\n",
       "      <td>GCash</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>A</td>\n",
       "      <td>No</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>130060541</td>\n",
       "      <td>0</td>\n",
       "      <td>2680728142</td>\n",
       "      <td>25/07/2021</td>\n",
       "      <td>137.43</td>\n",
       "      <td>GBP</td>\n",
       "      <td>MASTERCARD</td>\n",
       "      <td>WORLDPAY_WPG</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>A</td>\n",
       "      <td>No</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>59425843</td>\n",
       "      <td>0</td>\n",
       "      <td>2680719397</td>\n",
       "      <td>25/07/2021</td>\n",
       "      <td>9.88</td>\n",
       "      <td>EUR</td>\n",
       "      <td>TAX</td>\n",
       "      <td>ADMIN</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>A</td>\n",
       "      <td>No</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>95610708</td>\n",
       "      <td>0</td>\n",
       "      <td>2680727257</td>\n",
       "      <td>25/07/2021</td>\n",
       "      <td>411.99</td>\n",
       "      <td>EUR</td>\n",
       "      <td>PAYPAL</td>\n",
       "      <td>PAYPALDIRECT</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>A</td>\n",
       "      <td>No</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   USERINTID  VIP_STATUS     TRANSID COMPLETION_DATE  USD_AMOUNT   \\\n",
       "0   63786440           0  2680739487      25/07/2021        11.26   \n",
       "1  113590940           0  2680726130      25/07/2021            0   \n",
       "2  130060541           0  2680728142      25/07/2021       137.43   \n",
       "3   59425843           0  2680719397      25/07/2021         9.88   \n",
       "4   95610708           0  2680727257      25/07/2021       411.99   \n",
       "\n",
       "  ACCOUNT_CURRENCY   PAYSYSTEM       GATEWAY ROLLBACK OVERCREDIT FINAL_STATUS  \\\n",
       "0              EUR         TAX         ADMIN       No        Yes            A   \n",
       "1              CAD     DIRBANK         GCash       No        Yes            A   \n",
       "2              GBP  MASTERCARD  WORLDPAY_WPG      Yes         No            A   \n",
       "3              EUR         TAX         ADMIN       No        Yes            A   \n",
       "4              EUR      PAYPAL  PAYPALDIRECT       No        Yes            A   \n",
       "\n",
       "  ATAS_SCREENING RISK ATAS_RULE STATUS OLDSTATUS OUTCOME_POST_M  \\\n",
       "0             No    -         -      -         -              -   \n",
       "1             No    -         -      -         -              -   \n",
       "2             No    -         -      -         -              -   \n",
       "3             No    -         -      -         -              -   \n",
       "4             No    -         -      -         -              -   \n",
       "\n",
       "  HOST_OUTCOME_POST_M  \n",
       "0                   -  \n",
       "1                   -  \n",
       "2                   -  \n",
       "3                   -  \n",
       "4                   -  "
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "WithdrawalsJulyWeek4 = pd.read_csv('Desktop/UCD/Assignment/Withdrawals Jul Week 4.csv')\n",
    "WithdrawalsJulyWeek4.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "03392048-cf91-423f-83bb-ccdac7e6535a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th>USERINTID</th>\n",
       "      <th>VIP_STATUS</th>\n",
       "      <th>TRANSID</th>\n",
       "      <th>COMPLETION_DATE</th>\n",
       "      <th>USD_AMOUNT</th>\n",
       "      <th>ACCOUNT_CURRENCY</th>\n",
       "      <th>PAYSYSTEM</th>\n",
       "      <th>GATEWAY</th>\n",
       "      <th>ROLLBACK</th>\n",
       "      <th>OVERCREDIT</th>\n",
       "      <th>RISK</th>\n",
       "      <th>ATAS_RULE</th>\n",
       "      <th>STATUS</th>\n",
       "      <th>OLDSTATUS</th>\n",
       "      <th>OUTCOME_POST_M</th>\n",
       "      <th>HOST_OUTCOME_POST_M</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ATAS_SCREENING</th>\n",
       "      <th>FINAL_STATUS</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th rowspan=\"5\" valign=\"top\">No</th>\n",
       "      <th>A</th>\n",
       "      <td>337718</td>\n",
       "      <td>337718</td>\n",
       "      <td>337718</td>\n",
       "      <td>337718</td>\n",
       "      <td>337718</td>\n",
       "      <td>265633</td>\n",
       "      <td>337718</td>\n",
       "      <td>337718</td>\n",
       "      <td>337718</td>\n",
       "      <td>337718</td>\n",
       "      <td>337718</td>\n",
       "      <td>337718</td>\n",
       "      <td>337718</td>\n",
       "      <td>337718</td>\n",
       "      <td>337718</td>\n",
       "      <td>337718</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>C</th>\n",
       "      <td>12011</td>\n",
       "      <td>12011</td>\n",
       "      <td>12011</td>\n",
       "      <td>12011</td>\n",
       "      <td>12011</td>\n",
       "      <td>12011</td>\n",
       "      <td>12011</td>\n",
       "      <td>12011</td>\n",
       "      <td>12011</td>\n",
       "      <td>12011</td>\n",
       "      <td>12011</td>\n",
       "      <td>12011</td>\n",
       "      <td>12011</td>\n",
       "      <td>12011</td>\n",
       "      <td>12011</td>\n",
       "      <td>12011</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>H</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>R</th>\n",
       "      <td>3391</td>\n",
       "      <td>3391</td>\n",
       "      <td>3391</td>\n",
       "      <td>3391</td>\n",
       "      <td>3391</td>\n",
       "      <td>3391</td>\n",
       "      <td>3391</td>\n",
       "      <td>3391</td>\n",
       "      <td>3391</td>\n",
       "      <td>3391</td>\n",
       "      <td>3391</td>\n",
       "      <td>3391</td>\n",
       "      <td>3391</td>\n",
       "      <td>3391</td>\n",
       "      <td>3391</td>\n",
       "      <td>3391</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>X</th>\n",
       "      <td>32</td>\n",
       "      <td>32</td>\n",
       "      <td>32</td>\n",
       "      <td>32</td>\n",
       "      <td>32</td>\n",
       "      <td>20</td>\n",
       "      <td>32</td>\n",
       "      <td>32</td>\n",
       "      <td>32</td>\n",
       "      <td>32</td>\n",
       "      <td>32</td>\n",
       "      <td>32</td>\n",
       "      <td>32</td>\n",
       "      <td>32</td>\n",
       "      <td>32</td>\n",
       "      <td>32</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"4\" valign=\"top\">Yes</th>\n",
       "      <th>A</th>\n",
       "      <td>3289</td>\n",
       "      <td>3289</td>\n",
       "      <td>3289</td>\n",
       "      <td>3289</td>\n",
       "      <td>3289</td>\n",
       "      <td>3289</td>\n",
       "      <td>3289</td>\n",
       "      <td>3289</td>\n",
       "      <td>3289</td>\n",
       "      <td>3289</td>\n",
       "      <td>3289</td>\n",
       "      <td>3289</td>\n",
       "      <td>3289</td>\n",
       "      <td>3289</td>\n",
       "      <td>3289</td>\n",
       "      <td>3289</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>C</th>\n",
       "      <td>107</td>\n",
       "      <td>107</td>\n",
       "      <td>107</td>\n",
       "      <td>107</td>\n",
       "      <td>107</td>\n",
       "      <td>107</td>\n",
       "      <td>107</td>\n",
       "      <td>107</td>\n",
       "      <td>107</td>\n",
       "      <td>107</td>\n",
       "      <td>107</td>\n",
       "      <td>107</td>\n",
       "      <td>107</td>\n",
       "      <td>107</td>\n",
       "      <td>107</td>\n",
       "      <td>107</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>H</th>\n",
       "      <td>89</td>\n",
       "      <td>89</td>\n",
       "      <td>89</td>\n",
       "      <td>89</td>\n",
       "      <td>89</td>\n",
       "      <td>89</td>\n",
       "      <td>89</td>\n",
       "      <td>89</td>\n",
       "      <td>89</td>\n",
       "      <td>89</td>\n",
       "      <td>89</td>\n",
       "      <td>89</td>\n",
       "      <td>89</td>\n",
       "      <td>89</td>\n",
       "      <td>89</td>\n",
       "      <td>89</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>R</th>\n",
       "      <td>940</td>\n",
       "      <td>940</td>\n",
       "      <td>940</td>\n",
       "      <td>940</td>\n",
       "      <td>940</td>\n",
       "      <td>940</td>\n",
       "      <td>940</td>\n",
       "      <td>940</td>\n",
       "      <td>940</td>\n",
       "      <td>940</td>\n",
       "      <td>940</td>\n",
       "      <td>940</td>\n",
       "      <td>940</td>\n",
       "      <td>940</td>\n",
       "      <td>940</td>\n",
       "      <td>940</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                             USERINTID  VIP_STATUS  TRANSID  COMPLETION_DATE  \\\n",
       "ATAS_SCREENING FINAL_STATUS                                                    \n",
       "No             A                337718      337718   337718           337718   \n",
       "               C                 12011       12011    12011            12011   \n",
       "               H                     1           1        1                1   \n",
       "               R                  3391        3391     3391             3391   \n",
       "               X                    32          32       32               32   \n",
       "Yes            A                  3289        3289     3289             3289   \n",
       "               C                   107         107      107              107   \n",
       "               H                    89          89       89               89   \n",
       "               R                   940         940      940              940   \n",
       "\n",
       "                              USD_AMOUNT   ACCOUNT_CURRENCY  PAYSYSTEM  \\\n",
       "ATAS_SCREENING FINAL_STATUS                                              \n",
       "No             A                   337718            265633     337718   \n",
       "               C                    12011             12011      12011   \n",
       "               H                        1                 1          1   \n",
       "               R                     3391              3391       3391   \n",
       "               X                       32                20         32   \n",
       "Yes            A                     3289              3289       3289   \n",
       "               C                      107               107        107   \n",
       "               H                       89                89         89   \n",
       "               R                      940               940        940   \n",
       "\n",
       "                             GATEWAY  ROLLBACK  OVERCREDIT    RISK  ATAS_RULE  \\\n",
       "ATAS_SCREENING FINAL_STATUS                                                     \n",
       "No             A              337718    337718      337718  337718     337718   \n",
       "               C               12011     12011       12011   12011      12011   \n",
       "               H                   1         1           1       1          1   \n",
       "               R                3391      3391        3391    3391       3391   \n",
       "               X                  32        32          32      32         32   \n",
       "Yes            A                3289      3289        3289    3289       3289   \n",
       "               C                 107       107         107     107        107   \n",
       "               H                  89        89          89      89         89   \n",
       "               R                 940       940         940     940        940   \n",
       "\n",
       "                             STATUS  OLDSTATUS  OUTCOME_POST_M  \\\n",
       "ATAS_SCREENING FINAL_STATUS                                      \n",
       "No             A             337718     337718          337718   \n",
       "               C              12011      12011           12011   \n",
       "               H                  1          1               1   \n",
       "               R               3391       3391            3391   \n",
       "               X                 32         32              32   \n",
       "Yes            A               3289       3289            3289   \n",
       "               C                107        107             107   \n",
       "               H                 89         89              89   \n",
       "               R                940        940             940   \n",
       "\n",
       "                             HOST_OUTCOME_POST_M  \n",
       "ATAS_SCREENING FINAL_STATUS                       \n",
       "No             A                          337718  \n",
       "               C                           12011  \n",
       "               H                               1  \n",
       "               R                            3391  \n",
       "               X                              32  \n",
       "Yes            A                            3289  \n",
       "               C                             107  \n",
       "               H                              89  \n",
       "               R                             940  "
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "WithdrawalsJulyWeek4.groupby(['ATAS_SCREENING', 'FINAL_STATUS']).count()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "7bffc4ac-ac9f-4115-aaa2-5ba4427ad8f8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>USERINTID</th>\n",
       "      <th>VIP_STATUS</th>\n",
       "      <th>TRANSID</th>\n",
       "      <th>COMPLETION_DATE</th>\n",
       "      <th>USD_AMOUNT</th>\n",
       "      <th>ACCOUNT_CURRENCY</th>\n",
       "      <th>PAYSYSTEM</th>\n",
       "      <th>GATEWAY</th>\n",
       "      <th>ROLLBACK</th>\n",
       "      <th>OVERCREDIT</th>\n",
       "      <th>FINAL_STATUS</th>\n",
       "      <th>ATAS_SCREENING</th>\n",
       "      <th>RISK</th>\n",
       "      <th>ATAS_RULE</th>\n",
       "      <th>STATUS</th>\n",
       "      <th>OLDSTATUS</th>\n",
       "      <th>OUTCOME_POST_M</th>\n",
       "      <th>HOST_OUTCOME_POST_M</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>90806806</td>\n",
       "      <td>0</td>\n",
       "      <td>2486360818</td>\n",
       "      <td>01/05/2021</td>\n",
       "      <td>$460.00</td>\n",
       "      <td>USD</td>\n",
       "      <td>PAYPAL</td>\n",
       "      <td>PAYPALDIRECT</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>A</td>\n",
       "      <td>No</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>124322360</td>\n",
       "      <td>0</td>\n",
       "      <td>2600806352</td>\n",
       "      <td>01/05/2021</td>\n",
       "      <td>$-</td>\n",
       "      <td>USD</td>\n",
       "      <td>ECHECK</td>\n",
       "      <td>GCash</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>A</td>\n",
       "      <td>No</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>78750805</td>\n",
       "      <td>0</td>\n",
       "      <td>2625044270</td>\n",
       "      <td>01/05/2021</td>\n",
       "      <td>$9.55</td>\n",
       "      <td>EUR</td>\n",
       "      <td>TAX</td>\n",
       "      <td>ADMIN</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>A</td>\n",
       "      <td>No</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>43919524</td>\n",
       "      <td>0</td>\n",
       "      <td>2625038383</td>\n",
       "      <td>01/05/2021</td>\n",
       "      <td>$37.24</td>\n",
       "      <td>EUR</td>\n",
       "      <td>TAX</td>\n",
       "      <td>ADMIN</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>A</td>\n",
       "      <td>No</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>85818380</td>\n",
       "      <td>0</td>\n",
       "      <td>2625049975</td>\n",
       "      <td>01/05/2021</td>\n",
       "      <td>$278.58</td>\n",
       "      <td>EUR</td>\n",
       "      <td>TAX</td>\n",
       "      <td>ADMIN</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>A</td>\n",
       "      <td>No</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   USERINTID  VIP_STATUS     TRANSID COMPLETION_DATE  USD_AMOUNT   \\\n",
       "0   90806806           0  2486360818      01/05/2021     $460.00    \n",
       "1  124322360           0  2600806352      01/05/2021        $-      \n",
       "2   78750805           0  2625044270      01/05/2021       $9.55    \n",
       "3   43919524           0  2625038383      01/05/2021      $37.24    \n",
       "4   85818380           0  2625049975      01/05/2021     $278.58    \n",
       "\n",
       "  ACCOUNT_CURRENCY PAYSYSTEM       GATEWAY ROLLBACK OVERCREDIT FINAL_STATUS  \\\n",
       "0              USD    PAYPAL  PAYPALDIRECT       No        Yes            A   \n",
       "1              USD    ECHECK         GCash       No        Yes            A   \n",
       "2              EUR       TAX         ADMIN       No        Yes            A   \n",
       "3              EUR       TAX         ADMIN       No        Yes            A   \n",
       "4              EUR       TAX         ADMIN       No        Yes            A   \n",
       "\n",
       "  ATAS_SCREENING RISK ATAS_RULE STATUS OLDSTATUS OUTCOME_POST_M  \\\n",
       "0             No    -         -      -         -              -   \n",
       "1             No    -         -      -         -              -   \n",
       "2             No    -         -      -         -              -   \n",
       "3             No    -         -      -         -              -   \n",
       "4             No    -         -      -         -              -   \n",
       "\n",
       "  HOST_OUTCOME_POST_M  \n",
       "0                   -  \n",
       "1                   -  \n",
       "2                   -  \n",
       "3                   -  \n",
       "4                   -  "
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "WithdrawalsMayWeek1 = pd.read_csv('Desktop/UCD/Assignment/Withdrawals May Week 1.csv')\n",
    "WithdrawalsMayWeek1.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "75ac9315-d9a1-40d8-b0d4-fa0ea6ed31e4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>USERINTID</th>\n",
       "      <th>VIP_STATUS</th>\n",
       "      <th>TRANSID</th>\n",
       "      <th>COMPLETION_DATE</th>\n",
       "      <th>USD_AMOUNT</th>\n",
       "      <th>ACCOUNT_CURRENCY</th>\n",
       "      <th>PAYSYSTEM</th>\n",
       "      <th>GATEWAY</th>\n",
       "      <th>ROLLBACK</th>\n",
       "      <th>OVERCREDIT</th>\n",
       "      <th>FINAL_STATUS</th>\n",
       "      <th>ATAS_SCREENING</th>\n",
       "      <th>RISK</th>\n",
       "      <th>ATAS_RULE</th>\n",
       "      <th>STATUS</th>\n",
       "      <th>OLDSTATUS</th>\n",
       "      <th>OUTCOME_POST_M</th>\n",
       "      <th>HOST_OUTCOME_POST_M</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>90806806</td>\n",
       "      <td>0</td>\n",
       "      <td>2486360818</td>\n",
       "      <td>01/05/2021</td>\n",
       "      <td>460.00</td>\n",
       "      <td>USD</td>\n",
       "      <td>PAYPAL</td>\n",
       "      <td>PAYPALDIRECT</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>A</td>\n",
       "      <td>No</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>124322360</td>\n",
       "      <td>0</td>\n",
       "      <td>2600806352</td>\n",
       "      <td>01/05/2021</td>\n",
       "      <td>-</td>\n",
       "      <td>USD</td>\n",
       "      <td>ECHECK</td>\n",
       "      <td>GCash</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>A</td>\n",
       "      <td>No</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>78750805</td>\n",
       "      <td>0</td>\n",
       "      <td>2625044270</td>\n",
       "      <td>01/05/2021</td>\n",
       "      <td>9.55</td>\n",
       "      <td>EUR</td>\n",
       "      <td>TAX</td>\n",
       "      <td>ADMIN</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>A</td>\n",
       "      <td>No</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   USERINTID  VIP_STATUS     TRANSID COMPLETION_DATE  USD_AMOUNT   \\\n",
       "0   90806806           0  2486360818      01/05/2021      460.00    \n",
       "1  124322360           0  2600806352      01/05/2021         -      \n",
       "2   78750805           0  2625044270      01/05/2021        9.55    \n",
       "\n",
       "  ACCOUNT_CURRENCY PAYSYSTEM       GATEWAY ROLLBACK OVERCREDIT FINAL_STATUS  \\\n",
       "0              USD    PAYPAL  PAYPALDIRECT       No        Yes            A   \n",
       "1              USD    ECHECK         GCash       No        Yes            A   \n",
       "2              EUR       TAX         ADMIN       No        Yes            A   \n",
       "\n",
       "  ATAS_SCREENING RISK ATAS_RULE STATUS OLDSTATUS OUTCOME_POST_M  \\\n",
       "0             No    -         -      -         -              -   \n",
       "1             No    -         -      -         -              -   \n",
       "2             No    -         -      -         -              -   \n",
       "\n",
       "  HOST_OUTCOME_POST_M  \n",
       "0                   -  \n",
       "1                   -  \n",
       "2                   -  "
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "WithdrawalsMayWeek1[\" USD_AMOUNT \"] = WithdrawalsMayWeek1[\" USD_AMOUNT \"].replace({r'\\$':''}, regex = True)\n",
    "WithdrawalsMayWeek1[\" USD_AMOUNT \"] = WithdrawalsMayWeek1[\" USD_AMOUNT \"].replace({r'\\,':''}, regex = True)\n",
    "WithdrawalsMayWeek1.head(3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "9b7b82d5-07f0-42d5-85e9-c2491359fced",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>USERINTID</th>\n",
       "      <th>VIP_STATUS</th>\n",
       "      <th>TRANSID</th>\n",
       "      <th>COMPLETION_DATE</th>\n",
       "      <th>USD_AMOUNT</th>\n",
       "      <th>ACCOUNT_CURRENCY</th>\n",
       "      <th>PAYSYSTEM</th>\n",
       "      <th>GATEWAY</th>\n",
       "      <th>ROLLBACK</th>\n",
       "      <th>OVERCREDIT</th>\n",
       "      <th>FINAL_STATUS</th>\n",
       "      <th>ATAS_SCREENING</th>\n",
       "      <th>RISK</th>\n",
       "      <th>ATAS_RULE</th>\n",
       "      <th>STATUS</th>\n",
       "      <th>OLDSTATUS</th>\n",
       "      <th>OUTCOME_POST_M</th>\n",
       "      <th>HOST_OUTCOME_POST_M</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>90806806</td>\n",
       "      <td>0</td>\n",
       "      <td>2486360818</td>\n",
       "      <td>01/05/2021</td>\n",
       "      <td>460.00</td>\n",
       "      <td>USD</td>\n",
       "      <td>PAYPAL</td>\n",
       "      <td>PAYPALDIRECT</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>A</td>\n",
       "      <td>No</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>124322360</td>\n",
       "      <td>0</td>\n",
       "      <td>2600806352</td>\n",
       "      <td>01/05/2021</td>\n",
       "      <td>0</td>\n",
       "      <td>USD</td>\n",
       "      <td>ECHECK</td>\n",
       "      <td>GCash</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>A</td>\n",
       "      <td>No</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>78750805</td>\n",
       "      <td>0</td>\n",
       "      <td>2625044270</td>\n",
       "      <td>01/05/2021</td>\n",
       "      <td>9.55</td>\n",
       "      <td>EUR</td>\n",
       "      <td>TAX</td>\n",
       "      <td>ADMIN</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>A</td>\n",
       "      <td>No</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>43919524</td>\n",
       "      <td>0</td>\n",
       "      <td>2625038383</td>\n",
       "      <td>01/05/2021</td>\n",
       "      <td>37.24</td>\n",
       "      <td>EUR</td>\n",
       "      <td>TAX</td>\n",
       "      <td>ADMIN</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>A</td>\n",
       "      <td>No</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>85818380</td>\n",
       "      <td>0</td>\n",
       "      <td>2625049975</td>\n",
       "      <td>01/05/2021</td>\n",
       "      <td>278.58</td>\n",
       "      <td>EUR</td>\n",
       "      <td>TAX</td>\n",
       "      <td>ADMIN</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>A</td>\n",
       "      <td>No</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   USERINTID  VIP_STATUS     TRANSID COMPLETION_DATE  USD_AMOUNT   \\\n",
       "0   90806806           0  2486360818      01/05/2021      460.00    \n",
       "1  124322360           0  2600806352      01/05/2021            0   \n",
       "2   78750805           0  2625044270      01/05/2021        9.55    \n",
       "3   43919524           0  2625038383      01/05/2021       37.24    \n",
       "4   85818380           0  2625049975      01/05/2021      278.58    \n",
       "\n",
       "  ACCOUNT_CURRENCY PAYSYSTEM       GATEWAY ROLLBACK OVERCREDIT FINAL_STATUS  \\\n",
       "0              USD    PAYPAL  PAYPALDIRECT       No        Yes            A   \n",
       "1              USD    ECHECK         GCash       No        Yes            A   \n",
       "2              EUR       TAX         ADMIN       No        Yes            A   \n",
       "3              EUR       TAX         ADMIN       No        Yes            A   \n",
       "4              EUR       TAX         ADMIN       No        Yes            A   \n",
       "\n",
       "  ATAS_SCREENING RISK ATAS_RULE STATUS OLDSTATUS OUTCOME_POST_M  \\\n",
       "0             No    -         -      -         -              -   \n",
       "1             No    -         -      -         -              -   \n",
       "2             No    -         -      -         -              -   \n",
       "3             No    -         -      -         -              -   \n",
       "4             No    -         -      -         -              -   \n",
       "\n",
       "  HOST_OUTCOME_POST_M  \n",
       "0                   -  \n",
       "1                   -  \n",
       "2                   -  \n",
       "3                   -  \n",
       "4                   -  "
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "WithdrawalsMayWeek1= WithdrawalsMayWeek1.replace(to_replace = \" -   \",\n",
    "                           value = \"0\")\n",
    "WithdrawalsMayWeek1.head(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "804233cb-9d39-43ca-b54c-b1dc455e0760",
   "metadata": {},
   "outputs": [],
   "source": [
    "WithdrawalsMayWeek1[\" USD_AMOUNT \"] = WithdrawalsMayWeek1[\" USD_AMOUNT \"].astype('float64')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "29b736ac-b61b-40de-95c0-db823c3530be",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 411933 entries, 0 to 411932\n",
      "Data columns (total 18 columns):\n",
      " #   Column               Non-Null Count   Dtype  \n",
      "---  ------               --------------   -----  \n",
      " 0   USERINTID            411933 non-null  int64  \n",
      " 1   VIP_STATUS           411933 non-null  int64  \n",
      " 2   TRANSID              411933 non-null  int64  \n",
      " 3   COMPLETION_DATE      411933 non-null  object \n",
      " 4    USD_AMOUNT          411933 non-null  float64\n",
      " 5   ACCOUNT_CURRENCY     353240 non-null  object \n",
      " 6   PAYSYSTEM            411933 non-null  object \n",
      " 7   GATEWAY              411933 non-null  object \n",
      " 8   ROLLBACK             411933 non-null  object \n",
      " 9   OVERCREDIT           411933 non-null  object \n",
      " 10  FINAL_STATUS         411933 non-null  object \n",
      " 11  ATAS_SCREENING       411933 non-null  object \n",
      " 12  RISK                 411933 non-null  object \n",
      " 13  ATAS_RULE            411933 non-null  object \n",
      " 14  STATUS               411933 non-null  object \n",
      " 15  OLDSTATUS            411933 non-null  object \n",
      " 16  OUTCOME_POST_M       411933 non-null  object \n",
      " 17  HOST_OUTCOME_POST_M  411933 non-null  object \n",
      "dtypes: float64(1), int64(3), object(14)\n",
      "memory usage: 56.6+ MB\n"
     ]
    }
   ],
   "source": [
    "WithdrawalsMayWeek1.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "744e55ad-4916-459b-b3b6-89c91a111f6c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th>USERINTID</th>\n",
       "      <th>VIP_STATUS</th>\n",
       "      <th>TRANSID</th>\n",
       "      <th>COMPLETION_DATE</th>\n",
       "      <th>USD_AMOUNT</th>\n",
       "      <th>ACCOUNT_CURRENCY</th>\n",
       "      <th>PAYSYSTEM</th>\n",
       "      <th>GATEWAY</th>\n",
       "      <th>ROLLBACK</th>\n",
       "      <th>OVERCREDIT</th>\n",
       "      <th>RISK</th>\n",
       "      <th>ATAS_RULE</th>\n",
       "      <th>STATUS</th>\n",
       "      <th>OLDSTATUS</th>\n",
       "      <th>OUTCOME_POST_M</th>\n",
       "      <th>HOST_OUTCOME_POST_M</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ATAS_SCREENING</th>\n",
       "      <th>FINAL_STATUS</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th rowspan=\"5\" valign=\"top\">No</th>\n",
       "      <th>A</th>\n",
       "      <td>388891</td>\n",
       "      <td>388891</td>\n",
       "      <td>388891</td>\n",
       "      <td>388891</td>\n",
       "      <td>388891</td>\n",
       "      <td>330219</td>\n",
       "      <td>388891</td>\n",
       "      <td>388891</td>\n",
       "      <td>388891</td>\n",
       "      <td>388891</td>\n",
       "      <td>388891</td>\n",
       "      <td>388891</td>\n",
       "      <td>388891</td>\n",
       "      <td>388891</td>\n",
       "      <td>388891</td>\n",
       "      <td>388891</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>C</th>\n",
       "      <td>14023</td>\n",
       "      <td>14023</td>\n",
       "      <td>14023</td>\n",
       "      <td>14023</td>\n",
       "      <td>14023</td>\n",
       "      <td>14023</td>\n",
       "      <td>14023</td>\n",
       "      <td>14023</td>\n",
       "      <td>14023</td>\n",
       "      <td>14023</td>\n",
       "      <td>14023</td>\n",
       "      <td>14023</td>\n",
       "      <td>14023</td>\n",
       "      <td>14023</td>\n",
       "      <td>14023</td>\n",
       "      <td>14023</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>H</th>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>R</th>\n",
       "      <td>3641</td>\n",
       "      <td>3641</td>\n",
       "      <td>3641</td>\n",
       "      <td>3641</td>\n",
       "      <td>3641</td>\n",
       "      <td>3641</td>\n",
       "      <td>3641</td>\n",
       "      <td>3641</td>\n",
       "      <td>3641</td>\n",
       "      <td>3641</td>\n",
       "      <td>3641</td>\n",
       "      <td>3641</td>\n",
       "      <td>3641</td>\n",
       "      <td>3641</td>\n",
       "      <td>3641</td>\n",
       "      <td>3641</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>X</th>\n",
       "      <td>95</td>\n",
       "      <td>95</td>\n",
       "      <td>95</td>\n",
       "      <td>95</td>\n",
       "      <td>95</td>\n",
       "      <td>74</td>\n",
       "      <td>95</td>\n",
       "      <td>95</td>\n",
       "      <td>95</td>\n",
       "      <td>95</td>\n",
       "      <td>95</td>\n",
       "      <td>95</td>\n",
       "      <td>95</td>\n",
       "      <td>95</td>\n",
       "      <td>95</td>\n",
       "      <td>95</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"5\" valign=\"top\">Yes</th>\n",
       "      <th>A</th>\n",
       "      <td>3808</td>\n",
       "      <td>3808</td>\n",
       "      <td>3808</td>\n",
       "      <td>3808</td>\n",
       "      <td>3808</td>\n",
       "      <td>3808</td>\n",
       "      <td>3808</td>\n",
       "      <td>3808</td>\n",
       "      <td>3808</td>\n",
       "      <td>3808</td>\n",
       "      <td>3808</td>\n",
       "      <td>3808</td>\n",
       "      <td>3808</td>\n",
       "      <td>3808</td>\n",
       "      <td>3808</td>\n",
       "      <td>3808</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>C</th>\n",
       "      <td>99</td>\n",
       "      <td>99</td>\n",
       "      <td>99</td>\n",
       "      <td>99</td>\n",
       "      <td>99</td>\n",
       "      <td>99</td>\n",
       "      <td>99</td>\n",
       "      <td>99</td>\n",
       "      <td>99</td>\n",
       "      <td>99</td>\n",
       "      <td>99</td>\n",
       "      <td>99</td>\n",
       "      <td>99</td>\n",
       "      <td>99</td>\n",
       "      <td>99</td>\n",
       "      <td>99</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>H</th>\n",
       "      <td>56</td>\n",
       "      <td>56</td>\n",
       "      <td>56</td>\n",
       "      <td>56</td>\n",
       "      <td>56</td>\n",
       "      <td>56</td>\n",
       "      <td>56</td>\n",
       "      <td>56</td>\n",
       "      <td>56</td>\n",
       "      <td>56</td>\n",
       "      <td>56</td>\n",
       "      <td>56</td>\n",
       "      <td>56</td>\n",
       "      <td>56</td>\n",
       "      <td>56</td>\n",
       "      <td>56</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>R</th>\n",
       "      <td>1310</td>\n",
       "      <td>1310</td>\n",
       "      <td>1310</td>\n",
       "      <td>1310</td>\n",
       "      <td>1310</td>\n",
       "      <td>1310</td>\n",
       "      <td>1310</td>\n",
       "      <td>1310</td>\n",
       "      <td>1310</td>\n",
       "      <td>1310</td>\n",
       "      <td>1310</td>\n",
       "      <td>1310</td>\n",
       "      <td>1310</td>\n",
       "      <td>1310</td>\n",
       "      <td>1310</td>\n",
       "      <td>1310</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>V</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                             USERINTID  VIP_STATUS  TRANSID  COMPLETION_DATE  \\\n",
       "ATAS_SCREENING FINAL_STATUS                                                    \n",
       "No             A                388891      388891   388891           388891   \n",
       "               C                 14023       14023    14023            14023   \n",
       "               H                     9           9        9                9   \n",
       "               R                  3641        3641     3641             3641   \n",
       "               X                    95          95       95               95   \n",
       "Yes            A                  3808        3808     3808             3808   \n",
       "               C                    99          99       99               99   \n",
       "               H                    56          56       56               56   \n",
       "               R                  1310        1310     1310             1310   \n",
       "               V                     1           1        1                1   \n",
       "\n",
       "                              USD_AMOUNT   ACCOUNT_CURRENCY  PAYSYSTEM  \\\n",
       "ATAS_SCREENING FINAL_STATUS                                              \n",
       "No             A                   388891            330219     388891   \n",
       "               C                    14023             14023      14023   \n",
       "               H                        9                 9          9   \n",
       "               R                     3641              3641       3641   \n",
       "               X                       95                74         95   \n",
       "Yes            A                     3808              3808       3808   \n",
       "               C                       99                99         99   \n",
       "               H                       56                56         56   \n",
       "               R                     1310              1310       1310   \n",
       "               V                        1                 1          1   \n",
       "\n",
       "                             GATEWAY  ROLLBACK  OVERCREDIT    RISK  ATAS_RULE  \\\n",
       "ATAS_SCREENING FINAL_STATUS                                                     \n",
       "No             A              388891    388891      388891  388891     388891   \n",
       "               C               14023     14023       14023   14023      14023   \n",
       "               H                   9         9           9       9          9   \n",
       "               R                3641      3641        3641    3641       3641   \n",
       "               X                  95        95          95      95         95   \n",
       "Yes            A                3808      3808        3808    3808       3808   \n",
       "               C                  99        99          99      99         99   \n",
       "               H                  56        56          56      56         56   \n",
       "               R                1310      1310        1310    1310       1310   \n",
       "               V                   1         1           1       1          1   \n",
       "\n",
       "                             STATUS  OLDSTATUS  OUTCOME_POST_M  \\\n",
       "ATAS_SCREENING FINAL_STATUS                                      \n",
       "No             A             388891     388891          388891   \n",
       "               C              14023      14023           14023   \n",
       "               H                  9          9               9   \n",
       "               R               3641       3641            3641   \n",
       "               X                 95         95              95   \n",
       "Yes            A               3808       3808            3808   \n",
       "               C                 99         99              99   \n",
       "               H                 56         56              56   \n",
       "               R               1310       1310            1310   \n",
       "               V                  1          1               1   \n",
       "\n",
       "                             HOST_OUTCOME_POST_M  \n",
       "ATAS_SCREENING FINAL_STATUS                       \n",
       "No             A                          388891  \n",
       "               C                           14023  \n",
       "               H                               9  \n",
       "               R                            3641  \n",
       "               X                              95  \n",
       "Yes            A                            3808  \n",
       "               C                              99  \n",
       "               H                              56  \n",
       "               R                            1310  \n",
       "               V                               1  "
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "WithdrawalsMayWeek1.groupby(['ATAS_SCREENING', 'FINAL_STATUS']).count()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "a5c4e9bc-1992-4352-b5ab-971454c7a041",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\galvinl\\Anaconda3\\lib\\site-packages\\IPython\\core\\interactiveshell.py:3165: DtypeWarning: Columns (4) have mixed types.Specify dtype option on import or set low_memory=False.\n",
      "  has_raised = await self.run_ast_nodes(code_ast.body, cell_name,\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>USERINTID</th>\n",
       "      <th>VIP_STATUS</th>\n",
       "      <th>TRANSID</th>\n",
       "      <th>COMPLETION_DATE</th>\n",
       "      <th>USD_AMOUNT</th>\n",
       "      <th>ACCOUNT_CURRENCY</th>\n",
       "      <th>PAYSYSTEM</th>\n",
       "      <th>GATEWAY</th>\n",
       "      <th>ROLLBACK</th>\n",
       "      <th>OVERCREDIT</th>\n",
       "      <th>FINAL_STATUS</th>\n",
       "      <th>ATAS_SCREENING</th>\n",
       "      <th>RISK</th>\n",
       "      <th>ATAS_RULE</th>\n",
       "      <th>STATUS</th>\n",
       "      <th>OLDSTATUS</th>\n",
       "      <th>OUTCOME_POST_M</th>\n",
       "      <th>HOST_OUTCOME_POST_M</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>128710564</td>\n",
       "      <td>0</td>\n",
       "      <td>2625045000</td>\n",
       "      <td>01/05/2021</td>\n",
       "      <td>12</td>\n",
       "      <td>USD</td>\n",
       "      <td>TRANSFER</td>\n",
       "      <td>ADMIN</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>A</td>\n",
       "      <td>No</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>21755625</td>\n",
       "      <td>0</td>\n",
       "      <td>2625041225</td>\n",
       "      <td>01/05/2021</td>\n",
       "      <td>15</td>\n",
       "      <td>USD</td>\n",
       "      <td>TRANSFER</td>\n",
       "      <td>ADMIN</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>A</td>\n",
       "      <td>No</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>113784809</td>\n",
       "      <td>0</td>\n",
       "      <td>2625037495</td>\n",
       "      <td>01/05/2021</td>\n",
       "      <td>39.46</td>\n",
       "      <td>USD</td>\n",
       "      <td>TRANSFER</td>\n",
       "      <td>ADMIN</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>A</td>\n",
       "      <td>No</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>34709970</td>\n",
       "      <td>0</td>\n",
       "      <td>2625052548</td>\n",
       "      <td>01/05/2021</td>\n",
       "      <td>10.34</td>\n",
       "      <td>USD</td>\n",
       "      <td>TRANSFER</td>\n",
       "      <td>ADMIN</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>A</td>\n",
       "      <td>No</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>103324976</td>\n",
       "      <td>0</td>\n",
       "      <td>2625037468</td>\n",
       "      <td>01/05/2021</td>\n",
       "      <td>12.02</td>\n",
       "      <td>EUR</td>\n",
       "      <td>TRANSFER</td>\n",
       "      <td>ADMIN</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>A</td>\n",
       "      <td>No</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   USERINTID  VIP_STATUS     TRANSID COMPLETION_DATE USD_AMOUNT  \\\n",
       "0  128710564           0  2625045000      01/05/2021         12   \n",
       "1   21755625           0  2625041225      01/05/2021         15   \n",
       "2  113784809           0  2625037495      01/05/2021      39.46   \n",
       "3   34709970           0  2625052548      01/05/2021      10.34   \n",
       "4  103324976           0  2625037468      01/05/2021      12.02   \n",
       "\n",
       "  ACCOUNT_CURRENCY PAYSYSTEM GATEWAY ROLLBACK OVERCREDIT FINAL_STATUS  \\\n",
       "0              USD  TRANSFER   ADMIN       No         No            A   \n",
       "1              USD  TRANSFER   ADMIN       No         No            A   \n",
       "2              USD  TRANSFER   ADMIN       No         No            A   \n",
       "3              USD  TRANSFER   ADMIN       No         No            A   \n",
       "4              EUR  TRANSFER   ADMIN       No         No            A   \n",
       "\n",
       "  ATAS_SCREENING RISK ATAS_RULE STATUS OLDSTATUS OUTCOME_POST_M  \\\n",
       "0             No    -         -      -         -              -   \n",
       "1             No    -         -      -         -              -   \n",
       "2             No    -         -      -         -              -   \n",
       "3             No    -         -      -         -              -   \n",
       "4             No    -         -      -         -              -   \n",
       "\n",
       "  HOST_OUTCOME_POST_M  \n",
       "0                   -  \n",
       "1                   -  \n",
       "2                   -  \n",
       "3                   -  \n",
       "4                   -  "
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "TransfersMayWeek1 = pd.read_csv('Desktop/UCD/Assignment/Transfers May Week 1.csv')\n",
    "TransfersMayWeek1.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "84720fda-4dc4-46da-b807-c53308009a5a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "USERINTID                       int64\n",
       "VIP_STATUS                      int64\n",
       "TRANSID                         int64\n",
       "COMPLETION_DATE        datetime64[ns]\n",
       "USD_AMOUNT                     object\n",
       "ACCOUNT_CURRENCY               object\n",
       "PAYSYSTEM                      object\n",
       "GATEWAY                        object\n",
       "ROLLBACK                       object\n",
       "OVERCREDIT                     object\n",
       "FINAL_STATUS                   object\n",
       "ATAS_SCREENING                 object\n",
       "RISK                           object\n",
       "ATAS_RULE                      object\n",
       "STATUS                         object\n",
       "OLDSTATUS                      object\n",
       "OUTCOME_POST_M                 object\n",
       "HOST_OUTCOME_POST_M            object\n",
       "dtype: object"
      ]
     },
     "execution_count": 43,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "TransfersMayWeek1['COMPLETION_DATE'] = pd.to_datetime(TransfersMayWeek1['COMPLETION_DATE'])\n",
    "TransfersMayWeek1.dtypes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "0e4428f2-8e24-4bfc-b5bf-73846618062f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th>USERINTID</th>\n",
       "      <th>VIP_STATUS</th>\n",
       "      <th>TRANSID</th>\n",
       "      <th>COMPLETION_DATE</th>\n",
       "      <th>USD_AMOUNT</th>\n",
       "      <th>ACCOUNT_CURRENCY</th>\n",
       "      <th>PAYSYSTEM</th>\n",
       "      <th>GATEWAY</th>\n",
       "      <th>ROLLBACK</th>\n",
       "      <th>OVERCREDIT</th>\n",
       "      <th>RISK</th>\n",
       "      <th>ATAS_RULE</th>\n",
       "      <th>STATUS</th>\n",
       "      <th>OLDSTATUS</th>\n",
       "      <th>OUTCOME_POST_M</th>\n",
       "      <th>HOST_OUTCOME_POST_M</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ATAS_SCREENING</th>\n",
       "      <th>FINAL_STATUS</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>No</th>\n",
       "      <th>A</th>\n",
       "      <td>104848</td>\n",
       "      <td>104848</td>\n",
       "      <td>104848</td>\n",
       "      <td>104848</td>\n",
       "      <td>104848</td>\n",
       "      <td>104848</td>\n",
       "      <td>104848</td>\n",
       "      <td>104848</td>\n",
       "      <td>104848</td>\n",
       "      <td>104848</td>\n",
       "      <td>104848</td>\n",
       "      <td>104848</td>\n",
       "      <td>104848</td>\n",
       "      <td>104848</td>\n",
       "      <td>104848</td>\n",
       "      <td>104848</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"2\" valign=\"top\">Yes</th>\n",
       "      <th>A</th>\n",
       "      <td>918</td>\n",
       "      <td>918</td>\n",
       "      <td>918</td>\n",
       "      <td>918</td>\n",
       "      <td>918</td>\n",
       "      <td>918</td>\n",
       "      <td>918</td>\n",
       "      <td>918</td>\n",
       "      <td>918</td>\n",
       "      <td>918</td>\n",
       "      <td>918</td>\n",
       "      <td>918</td>\n",
       "      <td>918</td>\n",
       "      <td>918</td>\n",
       "      <td>918</td>\n",
       "      <td>918</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>R</th>\n",
       "      <td>527</td>\n",
       "      <td>527</td>\n",
       "      <td>527</td>\n",
       "      <td>527</td>\n",
       "      <td>527</td>\n",
       "      <td>527</td>\n",
       "      <td>527</td>\n",
       "      <td>527</td>\n",
       "      <td>527</td>\n",
       "      <td>527</td>\n",
       "      <td>527</td>\n",
       "      <td>527</td>\n",
       "      <td>527</td>\n",
       "      <td>527</td>\n",
       "      <td>527</td>\n",
       "      <td>527</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                             USERINTID  VIP_STATUS  TRANSID  COMPLETION_DATE  \\\n",
       "ATAS_SCREENING FINAL_STATUS                                                    \n",
       "No             A                104848      104848   104848           104848   \n",
       "Yes            A                   918         918      918              918   \n",
       "               R                   527         527      527              527   \n",
       "\n",
       "                             USD_AMOUNT  ACCOUNT_CURRENCY  PAYSYSTEM  GATEWAY  \\\n",
       "ATAS_SCREENING FINAL_STATUS                                                     \n",
       "No             A                 104848            104848     104848   104848   \n",
       "Yes            A                    918               918        918      918   \n",
       "               R                    527               527        527      527   \n",
       "\n",
       "                             ROLLBACK  OVERCREDIT    RISK  ATAS_RULE  STATUS  \\\n",
       "ATAS_SCREENING FINAL_STATUS                                                    \n",
       "No             A               104848      104848  104848     104848  104848   \n",
       "Yes            A                  918         918     918        918     918   \n",
       "               R                  527         527     527        527     527   \n",
       "\n",
       "                             OLDSTATUS  OUTCOME_POST_M  HOST_OUTCOME_POST_M  \n",
       "ATAS_SCREENING FINAL_STATUS                                                  \n",
       "No             A                104848          104848               104848  \n",
       "Yes            A                   918             918                  918  \n",
       "               R                   527             527                  527  "
      ]
     },
     "execution_count": 44,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "TransfersMayWeek1.groupby(['ATAS_SCREENING', 'FINAL_STATUS']).count()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "ed5fe17c-1f00-4441-915a-c3ef904fa6d0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>USERINTID</th>\n",
       "      <th>VIP_STATUS</th>\n",
       "      <th>TRANSID</th>\n",
       "      <th>COMPLETION_DATE</th>\n",
       "      <th>USD_AMOUNT</th>\n",
       "      <th>ACCOUNT_CURRENCY</th>\n",
       "      <th>PAYSYSTEM</th>\n",
       "      <th>GATEWAY</th>\n",
       "      <th>ROLLBACK</th>\n",
       "      <th>OVERCREDIT</th>\n",
       "      <th>FINAL_STATUS</th>\n",
       "      <th>ATAS_SCREENING</th>\n",
       "      <th>RISK</th>\n",
       "      <th>ATAS_RULE</th>\n",
       "      <th>STATUS</th>\n",
       "      <th>OLDSTATUS</th>\n",
       "      <th>OUTCOME_POST_M</th>\n",
       "      <th>HOST_OUTCOME_POST_M</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>34709970</td>\n",
       "      <td>0</td>\n",
       "      <td>2680048429</td>\n",
       "      <td>24/07/2021</td>\n",
       "      <td>$18.51</td>\n",
       "      <td>USD</td>\n",
       "      <td>TRANSFER</td>\n",
       "      <td>ADMIN</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>A</td>\n",
       "      <td>No</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>79119056</td>\n",
       "      <td>0</td>\n",
       "      <td>2680038031</td>\n",
       "      <td>24/07/2021</td>\n",
       "      <td>$22.50</td>\n",
       "      <td>USD</td>\n",
       "      <td>TRANSFER</td>\n",
       "      <td>ADMIN</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>A</td>\n",
       "      <td>No</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>88887552</td>\n",
       "      <td>0</td>\n",
       "      <td>2680043661</td>\n",
       "      <td>24/07/2021</td>\n",
       "      <td>$30.00</td>\n",
       "      <td>USD</td>\n",
       "      <td>TRANSFER</td>\n",
       "      <td>ADMIN</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>A</td>\n",
       "      <td>No</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>112232908</td>\n",
       "      <td>0</td>\n",
       "      <td>2680038025</td>\n",
       "      <td>24/07/2021</td>\n",
       "      <td>$0.04</td>\n",
       "      <td>USD</td>\n",
       "      <td>TRANSFER</td>\n",
       "      <td>ADMIN</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>A</td>\n",
       "      <td>No</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>6441316</td>\n",
       "      <td>0</td>\n",
       "      <td>2680034080</td>\n",
       "      <td>24/07/2021</td>\n",
       "      <td>$6.76</td>\n",
       "      <td>USD</td>\n",
       "      <td>TRANSFER</td>\n",
       "      <td>ADMIN</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>A</td>\n",
       "      <td>No</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   USERINTID  VIP_STATUS     TRANSID COMPLETION_DATE  USD_AMOUNT   \\\n",
       "0   34709970           0  2680048429      24/07/2021      $18.51    \n",
       "1   79119056           0  2680038031      24/07/2021      $22.50    \n",
       "2   88887552           0  2680043661      24/07/2021      $30.00    \n",
       "3  112232908           0  2680038025      24/07/2021       $0.04    \n",
       "4    6441316           0  2680034080      24/07/2021       $6.76    \n",
       "\n",
       "  ACCOUNT_CURRENCY PAYSYSTEM GATEWAY ROLLBACK OVERCREDIT FINAL_STATUS  \\\n",
       "0              USD  TRANSFER   ADMIN       No         No            A   \n",
       "1              USD  TRANSFER   ADMIN       No         No            A   \n",
       "2              USD  TRANSFER   ADMIN       No         No            A   \n",
       "3              USD  TRANSFER   ADMIN       No         No            A   \n",
       "4              USD  TRANSFER   ADMIN       No         No            A   \n",
       "\n",
       "  ATAS_SCREENING RISK ATAS_RULE STATUS OLDSTATUS OUTCOME_POST_M  \\\n",
       "0             No    -         -      -         -              -   \n",
       "1             No    -         -      -         -              -   \n",
       "2             No    -         -      -         -              -   \n",
       "3             No    -         -      -         -              -   \n",
       "4             No    -         -      -         -              -   \n",
       "\n",
       "  HOST_OUTCOME_POST_M  \n",
       "0                   -  \n",
       "1                   -  \n",
       "2                   -  \n",
       "3                   -  \n",
       "4                   -  "
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "TransfersJulWeek4 = pd.read_csv('Desktop/UCD/Assignment/Transfer July Week 4.csv')\n",
    "TransfersJulWeek4.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "475e4671-a26b-42ca-893e-6f9004b0899f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>USERINTID</th>\n",
       "      <th>VIP_STATUS</th>\n",
       "      <th>TRANSID</th>\n",
       "      <th>COMPLETION_DATE</th>\n",
       "      <th>USD_AMOUNT</th>\n",
       "      <th>ACCOUNT_CURRENCY</th>\n",
       "      <th>PAYSYSTEM</th>\n",
       "      <th>GATEWAY</th>\n",
       "      <th>ROLLBACK</th>\n",
       "      <th>OVERCREDIT</th>\n",
       "      <th>FINAL_STATUS</th>\n",
       "      <th>ATAS_SCREENING</th>\n",
       "      <th>RISK</th>\n",
       "      <th>ATAS_RULE</th>\n",
       "      <th>STATUS</th>\n",
       "      <th>OLDSTATUS</th>\n",
       "      <th>OUTCOME_POST_M</th>\n",
       "      <th>HOST_OUTCOME_POST_M</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>34709970</td>\n",
       "      <td>0</td>\n",
       "      <td>2680048429</td>\n",
       "      <td>24/07/2021</td>\n",
       "      <td>18.51</td>\n",
       "      <td>USD</td>\n",
       "      <td>TRANSFER</td>\n",
       "      <td>ADMIN</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>A</td>\n",
       "      <td>No</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>79119056</td>\n",
       "      <td>0</td>\n",
       "      <td>2680038031</td>\n",
       "      <td>24/07/2021</td>\n",
       "      <td>22.50</td>\n",
       "      <td>USD</td>\n",
       "      <td>TRANSFER</td>\n",
       "      <td>ADMIN</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>A</td>\n",
       "      <td>No</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>88887552</td>\n",
       "      <td>0</td>\n",
       "      <td>2680043661</td>\n",
       "      <td>24/07/2021</td>\n",
       "      <td>30.00</td>\n",
       "      <td>USD</td>\n",
       "      <td>TRANSFER</td>\n",
       "      <td>ADMIN</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>A</td>\n",
       "      <td>No</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   USERINTID  VIP_STATUS     TRANSID COMPLETION_DATE  USD_AMOUNT   \\\n",
       "0   34709970           0  2680048429      24/07/2021       18.51    \n",
       "1   79119056           0  2680038031      24/07/2021       22.50    \n",
       "2   88887552           0  2680043661      24/07/2021       30.00    \n",
       "\n",
       "  ACCOUNT_CURRENCY PAYSYSTEM GATEWAY ROLLBACK OVERCREDIT FINAL_STATUS  \\\n",
       "0              USD  TRANSFER   ADMIN       No         No            A   \n",
       "1              USD  TRANSFER   ADMIN       No         No            A   \n",
       "2              USD  TRANSFER   ADMIN       No         No            A   \n",
       "\n",
       "  ATAS_SCREENING RISK ATAS_RULE STATUS OLDSTATUS OUTCOME_POST_M  \\\n",
       "0             No    -         -      -         -              -   \n",
       "1             No    -         -      -         -              -   \n",
       "2             No    -         -      -         -              -   \n",
       "\n",
       "  HOST_OUTCOME_POST_M  \n",
       "0                   -  \n",
       "1                   -  \n",
       "2                   -  "
      ]
     },
     "execution_count": 46,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "TransfersJulWeek4[\" USD_AMOUNT \"] = TransfersJulWeek4[\" USD_AMOUNT \"].replace({r'\\$':''}, regex = True)\n",
    "TransfersJulWeek4[\" USD_AMOUNT \"] = TransfersJulWeek4[\" USD_AMOUNT \"].replace({r'\\,':''}, regex = True)\n",
    "TransfersJulWeek4.head(3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "685a234a-65e4-4baf-96ff-4701db42e73d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "USERINTID                       int64\n",
       "VIP_STATUS                      int64\n",
       "TRANSID                         int64\n",
       "COMPLETION_DATE        datetime64[ns]\n",
       " USD_AMOUNT                    object\n",
       "ACCOUNT_CURRENCY               object\n",
       "PAYSYSTEM                      object\n",
       "GATEWAY                        object\n",
       "ROLLBACK                       object\n",
       "OVERCREDIT                     object\n",
       "FINAL_STATUS                   object\n",
       "ATAS_SCREENING                 object\n",
       "RISK                           object\n",
       "ATAS_RULE                      object\n",
       "STATUS                         object\n",
       "OLDSTATUS                      object\n",
       "OUTCOME_POST_M                 object\n",
       "HOST_OUTCOME_POST_M            object\n",
       "dtype: object"
      ]
     },
     "execution_count": 47,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "TransfersJulWeek4['COMPLETION_DATE'] = pd.to_datetime(TransfersJulWeek4['COMPLETION_DATE'])\n",
    "TransfersJulWeek4.dtypes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "id": "3037f9a2-df4e-4853-9699-2d5e5ddb0c1b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th>USERINTID</th>\n",
       "      <th>VIP_STATUS</th>\n",
       "      <th>TRANSID</th>\n",
       "      <th>COMPLETION_DATE</th>\n",
       "      <th>USD_AMOUNT</th>\n",
       "      <th>ACCOUNT_CURRENCY</th>\n",
       "      <th>PAYSYSTEM</th>\n",
       "      <th>GATEWAY</th>\n",
       "      <th>ROLLBACK</th>\n",
       "      <th>OVERCREDIT</th>\n",
       "      <th>RISK</th>\n",
       "      <th>ATAS_RULE</th>\n",
       "      <th>STATUS</th>\n",
       "      <th>OLDSTATUS</th>\n",
       "      <th>OUTCOME_POST_M</th>\n",
       "      <th>HOST_OUTCOME_POST_M</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ATAS_SCREENING</th>\n",
       "      <th>FINAL_STATUS</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>No</th>\n",
       "      <th>A</th>\n",
       "      <td>98617</td>\n",
       "      <td>98617</td>\n",
       "      <td>98617</td>\n",
       "      <td>98617</td>\n",
       "      <td>98617</td>\n",
       "      <td>98617</td>\n",
       "      <td>98617</td>\n",
       "      <td>98617</td>\n",
       "      <td>98617</td>\n",
       "      <td>98617</td>\n",
       "      <td>98617</td>\n",
       "      <td>98617</td>\n",
       "      <td>98617</td>\n",
       "      <td>98617</td>\n",
       "      <td>98617</td>\n",
       "      <td>98617</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"2\" valign=\"top\">Yes</th>\n",
       "      <th>A</th>\n",
       "      <td>633</td>\n",
       "      <td>633</td>\n",
       "      <td>633</td>\n",
       "      <td>633</td>\n",
       "      <td>633</td>\n",
       "      <td>633</td>\n",
       "      <td>633</td>\n",
       "      <td>633</td>\n",
       "      <td>633</td>\n",
       "      <td>633</td>\n",
       "      <td>633</td>\n",
       "      <td>633</td>\n",
       "      <td>633</td>\n",
       "      <td>633</td>\n",
       "      <td>633</td>\n",
       "      <td>633</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>R</th>\n",
       "      <td>441</td>\n",
       "      <td>441</td>\n",
       "      <td>441</td>\n",
       "      <td>441</td>\n",
       "      <td>441</td>\n",
       "      <td>441</td>\n",
       "      <td>441</td>\n",
       "      <td>441</td>\n",
       "      <td>441</td>\n",
       "      <td>441</td>\n",
       "      <td>441</td>\n",
       "      <td>441</td>\n",
       "      <td>441</td>\n",
       "      <td>441</td>\n",
       "      <td>441</td>\n",
       "      <td>441</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                             USERINTID  VIP_STATUS  TRANSID  COMPLETION_DATE  \\\n",
       "ATAS_SCREENING FINAL_STATUS                                                    \n",
       "No             A                 98617       98617    98617            98617   \n",
       "Yes            A                   633         633      633              633   \n",
       "               R                   441         441      441              441   \n",
       "\n",
       "                              USD_AMOUNT   ACCOUNT_CURRENCY  PAYSYSTEM  \\\n",
       "ATAS_SCREENING FINAL_STATUS                                              \n",
       "No             A                    98617             98617      98617   \n",
       "Yes            A                      633               633        633   \n",
       "               R                      441               441        441   \n",
       "\n",
       "                             GATEWAY  ROLLBACK  OVERCREDIT   RISK  ATAS_RULE  \\\n",
       "ATAS_SCREENING FINAL_STATUS                                                    \n",
       "No             A               98617     98617       98617  98617      98617   \n",
       "Yes            A                 633       633         633    633        633   \n",
       "               R                 441       441         441    441        441   \n",
       "\n",
       "                             STATUS  OLDSTATUS  OUTCOME_POST_M  \\\n",
       "ATAS_SCREENING FINAL_STATUS                                      \n",
       "No             A              98617      98617           98617   \n",
       "Yes            A                633        633             633   \n",
       "               R                441        441             441   \n",
       "\n",
       "                             HOST_OUTCOME_POST_M  \n",
       "ATAS_SCREENING FINAL_STATUS                       \n",
       "No             A                           98617  \n",
       "Yes            A                             633  \n",
       "               R                             441  "
      ]
     },
     "execution_count": 48,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "TransfersJulWeek4.groupby(['ATAS_SCREENING', 'FINAL_STATUS']).count()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "id": "5de6b8ac-2afa-4579-b9a2-b9e98820a58c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0, 0.5, 'Number of Alerts')"
      ]
     },
     "execution_count": 49,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "Withdrawals = [1310, 940 ]\n",
    "Transfers = [527, 441]\n",
    "Index = (['May Week 1', 'July Week 4'])\n",
    "Data = pd.DataFrame({'Withdrawals': Withdrawals,\n",
    "               'Transfers': Transfers}, index=Index)\n",
    "ax = Data.plot.bar(rot=0)\n",
    "plt.title(\"Number of Fraudulent Alerts\", fontweight ='bold', fontsize = 14)\n",
    "plt.ylabel(\"Number of Alerts\", fontweight ='bold')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "96257215-c208-45b5-9dfe-ff1cad65642a",
   "metadata": {},
   "source": [
    "# Analysing the Trend of Deposit Alert Volumes over a Month"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "id": "b5d2eaa0-c056-4543-a79c-a545d4a38cc7",
   "metadata": {},
   "outputs": [],
   "source": [
    "Deposit_Alerts = pd.read_csv('Desktop/UCD/Assignment/Deposit Final.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "id": "9b231c7f-4bab-4813-a37c-48fecaec8ea0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>USERINTID</th>\n",
       "      <th>ALERTID</th>\n",
       "      <th>TRANSID</th>\n",
       "      <th>DATE</th>\n",
       "      <th>Month</th>\n",
       "      <th>USD AMOUNT</th>\n",
       "      <th>TSS/CSI Screening</th>\n",
       "      <th>TSS/CSI Rule Triggered</th>\n",
       "      <th>Outcome of Alert Review</th>\n",
       "      <th>Host of Alert Review</th>\n",
       "      <th>Behavior Score</th>\n",
       "      <th>Auto_SRM</th>\n",
       "      <th>Sample</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>130652290</td>\n",
       "      <td>115281523</td>\n",
       "      <td>2647297667</td>\n",
       "      <td>01/06/2021</td>\n",
       "      <td>June</td>\n",
       "      <td>$23.69</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Blacklisted BIN</td>\n",
       "      <td>Cleared</td>\n",
       "      <td>HostDariaS</td>\n",
       "      <td>Med/High</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>68634827</td>\n",
       "      <td>115266362</td>\n",
       "      <td>2647033636</td>\n",
       "      <td>01/06/2021</td>\n",
       "      <td>June</td>\n",
       "      <td>$31.83</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Country Mismatch</td>\n",
       "      <td>Abuse - Hack Case</td>\n",
       "      <td>HostKrisztiT</td>\n",
       "      <td>Low</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>90340387</td>\n",
       "      <td>115266334</td>\n",
       "      <td>2647039326</td>\n",
       "      <td>01/06/2021</td>\n",
       "      <td>June</td>\n",
       "      <td>$146.92</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Country Mismatch</td>\n",
       "      <td>Resolved</td>\n",
       "      <td>HostFabioA</td>\n",
       "      <td>Low</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   USERINTID    ALERTID     TRANSID        DATE Month  USD AMOUNT   \\\n",
       "0  130652290  115281523  2647297667  01/06/2021  June      $23.69    \n",
       "1   68634827  115266362  2647033636  01/06/2021  June      $31.83    \n",
       "2   90340387  115266334  2647039326  01/06/2021  June     $146.92    \n",
       "\n",
       "   TSS/CSI Screening   TSS/CSI Rule Triggered  Outcome of Alert Review  \\\n",
       "0                Yes           Blacklisted BIN                 Cleared   \n",
       "1                Yes          Country Mismatch       Abuse - Hack Case   \n",
       "2                Yes          Country Mismatch                Resolved   \n",
       "\n",
       "  Host of Alert Review Behavior Score  Auto_SRM  Sample   \n",
       "0           HostDariaS       Med/High         1      NaN  \n",
       "1         HostKrisztiT            Low         0      NaN  \n",
       "2           HostFabioA            Low         0      NaN  "
      ]
     },
     "execution_count": 51,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Deposit_Alerts.head(3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "id": "8a20ce6d-60d3-46c7-834a-8db05d98842e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "USERINTID                     int64\n",
       "ALERTID                       int64\n",
       "TRANSID                       int64\n",
       "DATE                         object\n",
       "Month                        object\n",
       " USD AMOUNT                  object\n",
       " TSS/CSI Screening           object\n",
       " TSS/CSI Rule Triggered      object\n",
       "Outcome of Alert Review      object\n",
       "Host of Alert Review         object\n",
       "Behavior Score               object\n",
       "Auto_SRM                      int64\n",
       "Sample                      float64\n",
       "dtype: object"
      ]
     },
     "execution_count": 52,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Deposit_Alerts.dtypes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "id": "ef523ec4-7e32-498a-b508-e0f261920237",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(23693, 13)"
      ]
     },
     "execution_count": 53,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Deposit_Alerts.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "id": "41f30430-2063-4e73-813c-ce43fb3616ea",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>USERINTID</th>\n",
       "      <th>ALERTID</th>\n",
       "      <th>TRANSID</th>\n",
       "      <th>DATE</th>\n",
       "      <th>Month</th>\n",
       "      <th>USD AMOUNT</th>\n",
       "      <th>TSS/CSI Screening</th>\n",
       "      <th>TSS/CSI Rule Triggered</th>\n",
       "      <th>Outcome of Alert Review</th>\n",
       "      <th>Host of Alert Review</th>\n",
       "      <th>Behavior Score</th>\n",
       "      <th>Auto_SRM</th>\n",
       "      <th>Sample</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>130652290</td>\n",
       "      <td>115281523</td>\n",
       "      <td>2647297667</td>\n",
       "      <td>01/06/2021</td>\n",
       "      <td>June</td>\n",
       "      <td>23.69</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Blacklisted BIN</td>\n",
       "      <td>Cleared</td>\n",
       "      <td>HostDariaS</td>\n",
       "      <td>Med/High</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>68634827</td>\n",
       "      <td>115266362</td>\n",
       "      <td>2647033636</td>\n",
       "      <td>01/06/2021</td>\n",
       "      <td>June</td>\n",
       "      <td>31.83</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Country Mismatch</td>\n",
       "      <td>Abuse - Hack Case</td>\n",
       "      <td>HostKrisztiT</td>\n",
       "      <td>Low</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>90340387</td>\n",
       "      <td>115266334</td>\n",
       "      <td>2647039326</td>\n",
       "      <td>01/06/2021</td>\n",
       "      <td>June</td>\n",
       "      <td>146.92</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Country Mismatch</td>\n",
       "      <td>Resolved</td>\n",
       "      <td>HostFabioA</td>\n",
       "      <td>Low</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   USERINTID    ALERTID     TRANSID        DATE Month  USD AMOUNT   \\\n",
       "0  130652290  115281523  2647297667  01/06/2021  June       23.69    \n",
       "1   68634827  115266362  2647033636  01/06/2021  June       31.83    \n",
       "2   90340387  115266334  2647039326  01/06/2021  June      146.92    \n",
       "\n",
       "   TSS/CSI Screening   TSS/CSI Rule Triggered  Outcome of Alert Review  \\\n",
       "0                Yes           Blacklisted BIN                 Cleared   \n",
       "1                Yes          Country Mismatch       Abuse - Hack Case   \n",
       "2                Yes          Country Mismatch                Resolved   \n",
       "\n",
       "  Host of Alert Review Behavior Score  Auto_SRM  Sample   \n",
       "0           HostDariaS       Med/High         1      NaN  \n",
       "1         HostKrisztiT            Low         0      NaN  \n",
       "2           HostFabioA            Low         0      NaN  "
      ]
     },
     "execution_count": 54,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Deposit_Alerts[\" USD AMOUNT \"] = Deposit_Alerts[\" USD AMOUNT \"].replace({r'\\$':''}, regex = True)\n",
    "Deposit_Alerts[\" USD AMOUNT \"] = Deposit_Alerts[\" USD AMOUNT \"].replace({r'\\,':''}, regex = True)\n",
    "Deposit_Alerts= Deposit_Alerts.replace(to_replace = \" -   \",\n",
    "                           value = \"0\")\n",
    "Deposit_Alerts.head(3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "id": "ea4860fc-4f87-440c-b790-b78cdd61833d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "USERINTID                     int64\n",
       "ALERTID                       int64\n",
       "TRANSID                       int64\n",
       "DATE                         object\n",
       "Month                        object\n",
       " USD AMOUNT                  object\n",
       " TSS/CSI Screening           object\n",
       " TSS/CSI Rule Triggered      object\n",
       "Outcome of Alert Review      object\n",
       "Host of Alert Review         object\n",
       "Behavior Score               object\n",
       "Auto_SRM                      int64\n",
       "Sample                      float64\n",
       "dtype: object"
      ]
     },
     "execution_count": 55,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Deposit_Alerts.dtypes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "id": "66b00500-504b-4679-8df4-364454f5c5cc",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "USERINTID                     int64\n",
       "ALERTID                       int64\n",
       "TRANSID                       int64\n",
       "DATE                         object\n",
       "Month                        object\n",
       " USD AMOUNT                 float64\n",
       " TSS/CSI Screening           object\n",
       " TSS/CSI Rule Triggered      object\n",
       "Outcome of Alert Review      object\n",
       "Host of Alert Review         object\n",
       "Behavior Score               object\n",
       "Auto_SRM                      int64\n",
       "Sample                      float64\n",
       "dtype: object"
      ]
     },
     "execution_count": 56,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Deposit_Alerts[\" USD AMOUNT \"] = Deposit_Alerts[\" USD AMOUNT \"].astype('float64')\n",
    "Deposit_Alerts.dtypes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "id": "df4f76d4-9797-4643-a39b-cc54b9943b3b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "123.88225425231049"
      ]
     },
     "execution_count": 57,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "np.mean(Deposit_Alerts[\" USD AMOUNT \"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "id": "3b137105-6aeb-45d4-9984-e9034c03c5da",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(60, 12)"
      ]
     },
     "execution_count": 58,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Deposits_Per_Date = Deposit_Alerts.groupby(['Month','DATE']).count().reset_index()\n",
    "Deposits_Per_Date = Deposits_Per_Date.set_index('Month')\n",
    "Deposits_Per_Date.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "id": "4663c49c-08b7-48c5-ace9-253c7b4ef230",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(30, 12)"
      ]
     },
     "execution_count": 59,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "July = Deposits_Per_Date.loc['July']\n",
    "July.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1353,
   "id": "07393655-7d64-4c12-8ac0-b2c2f6d85f72",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>DATE</th>\n",
       "      <th>USERINTID</th>\n",
       "      <th>ALERTID</th>\n",
       "      <th>TRANSID</th>\n",
       "      <th>USD AMOUNT</th>\n",
       "      <th>TSS/CSI Screening</th>\n",
       "      <th>TSS/CSI Rule Triggered</th>\n",
       "      <th>Outcome of Alert Review</th>\n",
       "      <th>Host of Alert Review</th>\n",
       "      <th>Behavior Score</th>\n",
       "      <th>Auto_SRM</th>\n",
       "      <th>Sample</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Month</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>July</th>\n",
       "      <td>01/07/2021</td>\n",
       "      <td>671</td>\n",
       "      <td>671</td>\n",
       "      <td>671</td>\n",
       "      <td>671</td>\n",
       "      <td>671</td>\n",
       "      <td>671</td>\n",
       "      <td>671</td>\n",
       "      <td>671</td>\n",
       "      <td>671</td>\n",
       "      <td>671</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>July</th>\n",
       "      <td>02/07/2021</td>\n",
       "      <td>358</td>\n",
       "      <td>358</td>\n",
       "      <td>358</td>\n",
       "      <td>358</td>\n",
       "      <td>358</td>\n",
       "      <td>358</td>\n",
       "      <td>358</td>\n",
       "      <td>358</td>\n",
       "      <td>358</td>\n",
       "      <td>358</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>July</th>\n",
       "      <td>03/07/2021</td>\n",
       "      <td>346</td>\n",
       "      <td>346</td>\n",
       "      <td>346</td>\n",
       "      <td>346</td>\n",
       "      <td>346</td>\n",
       "      <td>346</td>\n",
       "      <td>346</td>\n",
       "      <td>346</td>\n",
       "      <td>346</td>\n",
       "      <td>346</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>July</th>\n",
       "      <td>04/07/2021</td>\n",
       "      <td>290</td>\n",
       "      <td>290</td>\n",
       "      <td>290</td>\n",
       "      <td>290</td>\n",
       "      <td>290</td>\n",
       "      <td>290</td>\n",
       "      <td>290</td>\n",
       "      <td>290</td>\n",
       "      <td>290</td>\n",
       "      <td>290</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>July</th>\n",
       "      <td>05/07/2021</td>\n",
       "      <td>309</td>\n",
       "      <td>309</td>\n",
       "      <td>309</td>\n",
       "      <td>309</td>\n",
       "      <td>309</td>\n",
       "      <td>309</td>\n",
       "      <td>309</td>\n",
       "      <td>309</td>\n",
       "      <td>309</td>\n",
       "      <td>309</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             DATE  USERINTID  ALERTID  TRANSID   USD AMOUNT   \\\n",
       "Month                                                          \n",
       "July   01/07/2021        671      671      671           671   \n",
       "July   02/07/2021        358      358      358           358   \n",
       "July   03/07/2021        346      346      346           346   \n",
       "July   04/07/2021        290      290      290           290   \n",
       "July   05/07/2021        309      309      309           309   \n",
       "\n",
       "        TSS/CSI Screening    TSS/CSI Rule Triggered   Outcome of Alert Review  \\\n",
       "Month                                                                           \n",
       "July                   671                       671                      671   \n",
       "July                   358                       358                      358   \n",
       "July                   346                       346                      346   \n",
       "July                   290                       290                      290   \n",
       "July                   309                       309                      309   \n",
       "\n",
       "       Host of Alert Review  Behavior Score  Auto_SRM  Sample   \n",
       "Month                                                           \n",
       "July                    671             671       671        1  \n",
       "July                    358             358       358        0  \n",
       "July                    346             346       346        0  \n",
       "July                    290             290       290        0  \n",
       "July                    309             309       309        0  "
      ]
     },
     "execution_count": 1353,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "July.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1354,
   "id": "3dac4284-24db-47fb-824a-406c61d64a67",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(30, 12)"
      ]
     },
     "execution_count": 1354,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "June = Deposits_Per_Date.loc['June']\n",
    "July.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1355,
   "id": "1eb72b10-1ab1-4226-b1b0-17228a46c4c1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>DATE</th>\n",
       "      <th>USERINTID</th>\n",
       "      <th>ALERTID</th>\n",
       "      <th>TRANSID</th>\n",
       "      <th>USD AMOUNT</th>\n",
       "      <th>TSS/CSI Screening</th>\n",
       "      <th>TSS/CSI Rule Triggered</th>\n",
       "      <th>Outcome of Alert Review</th>\n",
       "      <th>Host of Alert Review</th>\n",
       "      <th>Behavior Score</th>\n",
       "      <th>Auto_SRM</th>\n",
       "      <th>Sample</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Month</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>June</th>\n",
       "      <td>01/06/2021</td>\n",
       "      <td>341</td>\n",
       "      <td>341</td>\n",
       "      <td>341</td>\n",
       "      <td>341</td>\n",
       "      <td>341</td>\n",
       "      <td>341</td>\n",
       "      <td>341</td>\n",
       "      <td>341</td>\n",
       "      <td>341</td>\n",
       "      <td>341</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>June</th>\n",
       "      <td>02/06/2021</td>\n",
       "      <td>348</td>\n",
       "      <td>348</td>\n",
       "      <td>348</td>\n",
       "      <td>348</td>\n",
       "      <td>348</td>\n",
       "      <td>348</td>\n",
       "      <td>348</td>\n",
       "      <td>348</td>\n",
       "      <td>348</td>\n",
       "      <td>348</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>June</th>\n",
       "      <td>03/06/2021</td>\n",
       "      <td>347</td>\n",
       "      <td>347</td>\n",
       "      <td>347</td>\n",
       "      <td>347</td>\n",
       "      <td>347</td>\n",
       "      <td>347</td>\n",
       "      <td>347</td>\n",
       "      <td>347</td>\n",
       "      <td>347</td>\n",
       "      <td>347</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>June</th>\n",
       "      <td>04/06/2021</td>\n",
       "      <td>356</td>\n",
       "      <td>356</td>\n",
       "      <td>356</td>\n",
       "      <td>356</td>\n",
       "      <td>356</td>\n",
       "      <td>356</td>\n",
       "      <td>356</td>\n",
       "      <td>356</td>\n",
       "      <td>356</td>\n",
       "      <td>356</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>June</th>\n",
       "      <td>05/06/2021</td>\n",
       "      <td>355</td>\n",
       "      <td>355</td>\n",
       "      <td>355</td>\n",
       "      <td>355</td>\n",
       "      <td>355</td>\n",
       "      <td>355</td>\n",
       "      <td>355</td>\n",
       "      <td>355</td>\n",
       "      <td>355</td>\n",
       "      <td>355</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             DATE  USERINTID  ALERTID  TRANSID   USD AMOUNT   \\\n",
       "Month                                                          \n",
       "June   01/06/2021        341      341      341           341   \n",
       "June   02/06/2021        348      348      348           348   \n",
       "June   03/06/2021        347      347      347           347   \n",
       "June   04/06/2021        356      356      356           356   \n",
       "June   05/06/2021        355      355      355           355   \n",
       "\n",
       "        TSS/CSI Screening    TSS/CSI Rule Triggered   Outcome of Alert Review  \\\n",
       "Month                                                                           \n",
       "June                   341                       341                      341   \n",
       "June                   348                       348                      348   \n",
       "June                   347                       347                      347   \n",
       "June                   356                       356                      356   \n",
       "June                   355                       355                      355   \n",
       "\n",
       "       Host of Alert Review  Behavior Score  Auto_SRM  Sample   \n",
       "Month                                                           \n",
       "June                    341             341       341        3  \n",
       "June                    348             348       348        0  \n",
       "June                    347             347       347        0  \n",
       "June                    356             356       356        0  \n",
       "June                    355             355       355        0  "
      ]
     },
     "execution_count": 1355,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "June.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1356,
   "id": "6cac7144-650b-4a67-a9c8-72b6462f8a9e",
   "metadata": {},
   "outputs": [],
   "source": [
    "Julydate = July[\"DATE\"]\n",
    "JulyNumber = July[\" TSS/CSI Screening \"]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1357,
   "id": "9eb68299-16a3-462b-b9e8-826d6441030f",
   "metadata": {},
   "outputs": [],
   "source": [
    "Junedate = June[\"DATE\"]\n",
    "JuneNumber = June[\" TSS/CSI Screening \"]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1358,
   "id": "39d0c139-10ce-4cde-85e3-52be2ee02fa5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.subplots(figsize=(10,5))\n",
    "plt.plot(Junedate, JuneNumber)\n",
    "plt.title(\"June Deposits 2021\", fontweight ='bold', fontsize = 14)\n",
    "plt.ylabel(\"Number of Deposits\", fontweight ='bold')\n",
    "plt.xlabel(\"Date\", fontweight ='bold')\n",
    "plt.tick_params(axis ='x', rotation =45)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1359,
   "id": "c852576b-c4fd-449d-ae17-a4406c718e45",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.subplots(figsize=(10,5))\n",
    "plt.plot(Julydate, JulyNumber)\n",
    "plt.title(\"July Deposits 2021\", fontweight ='bold', fontsize = 14)\n",
    "plt.ylabel(\"Number of Deposits\", fontweight ='bold')\n",
    "plt.xlabel(\"Date\", fontweight ='bold')\n",
    "plt.tick_params(axis ='x', rotation =45)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8992fe30-d74d-449f-b5e7-5caf33172cba",
   "metadata": {},
   "source": [
    "# Analysing the Percentage of Fraudulent Transactions per Payment Gateway"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1360,
   "id": "c284bb3b-a344-4b2e-9a7d-41ec1b8a9aef",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "USERINTID               int64\n",
       "VIP_STATUS              int64\n",
       "TRANSID                 int64\n",
       "COMPLETION_DATE        object\n",
       " USD_AMOUNT            object\n",
       "ACCOUNT_CURRENCY       object\n",
       "PAYSYSTEM              object\n",
       "GATEWAY                object\n",
       "ROLLBACK               object\n",
       "OVERCREDIT             object\n",
       "FINAL_STATUS           object\n",
       "ATAS_SCREENING         object\n",
       "RISK                   object\n",
       "ATAS_RULE              object\n",
       "STATUS                 object\n",
       "OLDSTATUS              object\n",
       "OUTCOME_POST_M         object\n",
       "HOST_OUTCOME_POST_M    object\n",
       "Effective_Rules        object\n",
       "dtype: object"
      ]
     },
     "execution_count": 1360,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "WithdrawalsJulyWeek4.dtypes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1361,
   "id": "52adc4ce-9d13-4c1e-ade5-cc89d4361df5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>USERINTID</th>\n",
       "      <th>VIP_STATUS</th>\n",
       "      <th>TRANSID</th>\n",
       "      <th>COMPLETION_DATE</th>\n",
       "      <th>USD_AMOUNT</th>\n",
       "      <th>ACCOUNT_CURRENCY</th>\n",
       "      <th>PAYSYSTEM</th>\n",
       "      <th>GATEWAY</th>\n",
       "      <th>ROLLBACK</th>\n",
       "      <th>OVERCREDIT</th>\n",
       "      <th>FINAL_STATUS</th>\n",
       "      <th>ATAS_SCREENING</th>\n",
       "      <th>RISK</th>\n",
       "      <th>ATAS_RULE</th>\n",
       "      <th>STATUS</th>\n",
       "      <th>OLDSTATUS</th>\n",
       "      <th>OUTCOME_POST_M</th>\n",
       "      <th>HOST_OUTCOME_POST_M</th>\n",
       "      <th>Effective_Rules</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>63786440</td>\n",
       "      <td>0</td>\n",
       "      <td>2680739487</td>\n",
       "      <td>25/07/2021</td>\n",
       "      <td>11.26</td>\n",
       "      <td>EUR</td>\n",
       "      <td>TAX</td>\n",
       "      <td>ADMIN</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>A</td>\n",
       "      <td>No</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>FalseAlarm</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>113590940</td>\n",
       "      <td>0</td>\n",
       "      <td>2680726130</td>\n",
       "      <td>25/07/2021</td>\n",
       "      <td>0.00</td>\n",
       "      <td>CAD</td>\n",
       "      <td>DIRBANK</td>\n",
       "      <td>GCash</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>A</td>\n",
       "      <td>No</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>FalseAlarm</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>130060541</td>\n",
       "      <td>0</td>\n",
       "      <td>2680728142</td>\n",
       "      <td>25/07/2021</td>\n",
       "      <td>137.43</td>\n",
       "      <td>GBP</td>\n",
       "      <td>MASTERCARD</td>\n",
       "      <td>WORLDPAY_WPG</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>A</td>\n",
       "      <td>No</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>FalseAlarm</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>59425843</td>\n",
       "      <td>0</td>\n",
       "      <td>2680719397</td>\n",
       "      <td>25/07/2021</td>\n",
       "      <td>9.88</td>\n",
       "      <td>EUR</td>\n",
       "      <td>TAX</td>\n",
       "      <td>ADMIN</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>A</td>\n",
       "      <td>No</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>FalseAlarm</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>95610708</td>\n",
       "      <td>0</td>\n",
       "      <td>2680727257</td>\n",
       "      <td>25/07/2021</td>\n",
       "      <td>411.99</td>\n",
       "      <td>EUR</td>\n",
       "      <td>PAYPAL</td>\n",
       "      <td>PAYPALDIRECT</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>A</td>\n",
       "      <td>No</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>FalseAlarm</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>122932177</td>\n",
       "      <td>0</td>\n",
       "      <td>2530063156</td>\n",
       "      <td>25/07/2021</td>\n",
       "      <td>0.00</td>\n",
       "      <td>NaN</td>\n",
       "      <td>LOOPBACK</td>\n",
       "      <td>GCash</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>A</td>\n",
       "      <td>No</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>FalseAlarm</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>57829486</td>\n",
       "      <td>0</td>\n",
       "      <td>2680734897</td>\n",
       "      <td>25/07/2021</td>\n",
       "      <td>0.13</td>\n",
       "      <td>USD</td>\n",
       "      <td>FEE</td>\n",
       "      <td>ADMIN</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>A</td>\n",
       "      <td>No</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>FalseAlarm</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>87191081</td>\n",
       "      <td>0</td>\n",
       "      <td>2680739489</td>\n",
       "      <td>25/07/2021</td>\n",
       "      <td>0.00</td>\n",
       "      <td>NaN</td>\n",
       "      <td>LOOPBACK</td>\n",
       "      <td>GCash</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>A</td>\n",
       "      <td>No</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>FalseAlarm</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>87191081</td>\n",
       "      <td>0</td>\n",
       "      <td>2680739490</td>\n",
       "      <td>25/07/2021</td>\n",
       "      <td>117.71</td>\n",
       "      <td>EUR</td>\n",
       "      <td>VISA</td>\n",
       "      <td>WORLDPAY_WPG</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>A</td>\n",
       "      <td>No</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>FalseAlarm</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>122932177</td>\n",
       "      <td>0</td>\n",
       "      <td>2530063157</td>\n",
       "      <td>25/07/2021</td>\n",
       "      <td>40.00</td>\n",
       "      <td>USD</td>\n",
       "      <td>ECHECK</td>\n",
       "      <td>PARAMOUNT</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>A</td>\n",
       "      <td>No</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>FalseAlarm</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   USERINTID  VIP_STATUS     TRANSID COMPLETION_DATE   USD_AMOUNT   \\\n",
       "0   63786440           0  2680739487      25/07/2021         11.26   \n",
       "1  113590940           0  2680726130      25/07/2021          0.00   \n",
       "2  130060541           0  2680728142      25/07/2021        137.43   \n",
       "3   59425843           0  2680719397      25/07/2021          9.88   \n",
       "4   95610708           0  2680727257      25/07/2021        411.99   \n",
       "5  122932177           0  2530063156      25/07/2021          0.00   \n",
       "6   57829486           0  2680734897      25/07/2021          0.13   \n",
       "7   87191081           0  2680739489      25/07/2021          0.00   \n",
       "8   87191081           0  2680739490      25/07/2021        117.71   \n",
       "9  122932177           0  2530063157      25/07/2021         40.00   \n",
       "\n",
       "  ACCOUNT_CURRENCY   PAYSYSTEM       GATEWAY ROLLBACK OVERCREDIT FINAL_STATUS  \\\n",
       "0              EUR         TAX         ADMIN       No        Yes            A   \n",
       "1              CAD     DIRBANK         GCash       No        Yes            A   \n",
       "2              GBP  MASTERCARD  WORLDPAY_WPG      Yes         No            A   \n",
       "3              EUR         TAX         ADMIN       No        Yes            A   \n",
       "4              EUR      PAYPAL  PAYPALDIRECT       No        Yes            A   \n",
       "5              NaN    LOOPBACK         GCash       No        Yes            A   \n",
       "6              USD         FEE         ADMIN       No        Yes            A   \n",
       "7              NaN    LOOPBACK         GCash       No        Yes            A   \n",
       "8              EUR        VISA  WORLDPAY_WPG      Yes         No            A   \n",
       "9              USD      ECHECK     PARAMOUNT      Yes         No            A   \n",
       "\n",
       "  ATAS_SCREENING RISK ATAS_RULE STATUS OLDSTATUS OUTCOME_POST_M  \\\n",
       "0             No    -         -      -         -              -   \n",
       "1             No    -         -      -         -              -   \n",
       "2             No    -         -      -         -              -   \n",
       "3             No    -         -      -         -              -   \n",
       "4             No    -         -      -         -              -   \n",
       "5             No    -         -      -         -              -   \n",
       "6             No    -         -      -         -              -   \n",
       "7             No    -         -      -         -              -   \n",
       "8             No    -         -      -         -              -   \n",
       "9             No    -         -      -         -              -   \n",
       "\n",
       "  HOST_OUTCOME_POST_M Effective_Rules  \n",
       "0                   -      FalseAlarm  \n",
       "1                   -      FalseAlarm  \n",
       "2                   -      FalseAlarm  \n",
       "3                   -      FalseAlarm  \n",
       "4                   -      FalseAlarm  \n",
       "5                   -      FalseAlarm  \n",
       "6                   -      FalseAlarm  \n",
       "7                   -      FalseAlarm  \n",
       "8                   -      FalseAlarm  \n",
       "9                   -      FalseAlarm  "
      ]
     },
     "execution_count": 1361,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "WithdrawalsJulyWeek4[\" USD_AMOUNT \"] = WithdrawalsJulyWeek4[\" USD_AMOUNT \"].replace({r'\\,':''}, regex = True)\n",
    "WithdrawalsJulyWeek4[\" USD_AMOUNT \"] = WithdrawalsJulyWeek4[\" USD_AMOUNT \"].astype('float64')\n",
    "WithdrawalsJulyWeek4.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1362,
   "id": "8610a5c1-cb1f-4280-b840-e7e5407e2188",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>USERINTID</th>\n",
       "      <th>VIP_STATUS</th>\n",
       "      <th>TRANSID</th>\n",
       "      <th>COMPLETION_DATE</th>\n",
       "      <th>USD_AMOUNT</th>\n",
       "      <th>ACCOUNT_CURRENCY</th>\n",
       "      <th>PAYSYSTEM</th>\n",
       "      <th>GATEWAY</th>\n",
       "      <th>ROLLBACK</th>\n",
       "      <th>OVERCREDIT</th>\n",
       "      <th>FINAL_STATUS</th>\n",
       "      <th>ATAS_SCREENING</th>\n",
       "      <th>RISK</th>\n",
       "      <th>ATAS_RULE</th>\n",
       "      <th>STATUS</th>\n",
       "      <th>OLDSTATUS</th>\n",
       "      <th>OUTCOME_POST_M</th>\n",
       "      <th>HOST_OUTCOME_POST_M</th>\n",
       "      <th>Effective_Rules</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>63786440</td>\n",
       "      <td>0</td>\n",
       "      <td>2680739487</td>\n",
       "      <td>25/07/2021</td>\n",
       "      <td>11.26</td>\n",
       "      <td>EUR</td>\n",
       "      <td>TAX</td>\n",
       "      <td>ADMIN</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>A</td>\n",
       "      <td>No</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>FalseAlarm</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>113590940</td>\n",
       "      <td>0</td>\n",
       "      <td>2680726130</td>\n",
       "      <td>25/07/2021</td>\n",
       "      <td>0.00</td>\n",
       "      <td>CAD</td>\n",
       "      <td>DIRBANK</td>\n",
       "      <td>GCash</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>A</td>\n",
       "      <td>No</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>FalseAlarm</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>130060541</td>\n",
       "      <td>0</td>\n",
       "      <td>2680728142</td>\n",
       "      <td>25/07/2021</td>\n",
       "      <td>137.43</td>\n",
       "      <td>GBP</td>\n",
       "      <td>MASTERCARD</td>\n",
       "      <td>WORLDPAY_WPG</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>A</td>\n",
       "      <td>No</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>FalseAlarm</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>59425843</td>\n",
       "      <td>0</td>\n",
       "      <td>2680719397</td>\n",
       "      <td>25/07/2021</td>\n",
       "      <td>9.88</td>\n",
       "      <td>EUR</td>\n",
       "      <td>TAX</td>\n",
       "      <td>ADMIN</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>A</td>\n",
       "      <td>No</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>FalseAlarm</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>95610708</td>\n",
       "      <td>0</td>\n",
       "      <td>2680727257</td>\n",
       "      <td>25/07/2021</td>\n",
       "      <td>411.99</td>\n",
       "      <td>EUR</td>\n",
       "      <td>PAYPAL</td>\n",
       "      <td>PAYPALDIRECT</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>A</td>\n",
       "      <td>No</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>FalseAlarm</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   USERINTID  VIP_STATUS     TRANSID COMPLETION_DATE   USD_AMOUNT   \\\n",
       "0   63786440           0  2680739487      25/07/2021         11.26   \n",
       "1  113590940           0  2680726130      25/07/2021          0.00   \n",
       "2  130060541           0  2680728142      25/07/2021        137.43   \n",
       "3   59425843           0  2680719397      25/07/2021          9.88   \n",
       "4   95610708           0  2680727257      25/07/2021        411.99   \n",
       "\n",
       "  ACCOUNT_CURRENCY   PAYSYSTEM       GATEWAY ROLLBACK OVERCREDIT FINAL_STATUS  \\\n",
       "0              EUR         TAX         ADMIN       No        Yes            A   \n",
       "1              CAD     DIRBANK         GCash       No        Yes            A   \n",
       "2              GBP  MASTERCARD  WORLDPAY_WPG      Yes         No            A   \n",
       "3              EUR         TAX         ADMIN       No        Yes            A   \n",
       "4              EUR      PAYPAL  PAYPALDIRECT       No        Yes            A   \n",
       "\n",
       "  ATAS_SCREENING RISK ATAS_RULE STATUS OLDSTATUS OUTCOME_POST_M  \\\n",
       "0             No    -         -      -         -              -   \n",
       "1             No    -         -      -         -              -   \n",
       "2             No    -         -      -         -              -   \n",
       "3             No    -         -      -         -              -   \n",
       "4             No    -         -      -         -              -   \n",
       "\n",
       "  HOST_OUTCOME_POST_M Effective_Rules  \n",
       "0                   -      FalseAlarm  \n",
       "1                   -      FalseAlarm  \n",
       "2                   -      FalseAlarm  \n",
       "3                   -      FalseAlarm  \n",
       "4                   -      FalseAlarm  "
      ]
     },
     "execution_count": 1362,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "WithdrawalsJulyWeek4['Effective_Rules'] = WithdrawalsJulyWeek4['FINAL_STATUS'].apply(effective_rules)\n",
    "WithdrawalsJulyWeek4.head(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1363,
   "id": "6a564e23-e11e-4a40-91ee-8fd21343cfc9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>GATEWAY</th>\n",
       "      <th>USERINTID</th>\n",
       "      <th>VIP_STATUS</th>\n",
       "      <th>TRANSID</th>\n",
       "      <th>COMPLETION_DATE</th>\n",
       "      <th>USD_AMOUNT</th>\n",
       "      <th>ACCOUNT_CURRENCY</th>\n",
       "      <th>PAYSYSTEM</th>\n",
       "      <th>ROLLBACK</th>\n",
       "      <th>OVERCREDIT</th>\n",
       "      <th>FINAL_STATUS</th>\n",
       "      <th>ATAS_SCREENING</th>\n",
       "      <th>RISK</th>\n",
       "      <th>ATAS_RULE</th>\n",
       "      <th>STATUS</th>\n",
       "      <th>OLDSTATUS</th>\n",
       "      <th>OUTCOME_POST_M</th>\n",
       "      <th>HOST_OUTCOME_POST_M</th>\n",
       "      <th>Effective_Rules</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>ACH_PND</td>\n",
       "      <td>724</td>\n",
       "      <td>724</td>\n",
       "      <td>724</td>\n",
       "      <td>724</td>\n",
       "      <td>724</td>\n",
       "      <td>724</td>\n",
       "      <td>724</td>\n",
       "      <td>724</td>\n",
       "      <td>724</td>\n",
       "      <td>724</td>\n",
       "      <td>724</td>\n",
       "      <td>724</td>\n",
       "      <td>724</td>\n",
       "      <td>724</td>\n",
       "      <td>724</td>\n",
       "      <td>724</td>\n",
       "      <td>724</td>\n",
       "      <td>724</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>ADMIN</td>\n",
       "      <td>53817</td>\n",
       "      <td>53817</td>\n",
       "      <td>53817</td>\n",
       "      <td>53817</td>\n",
       "      <td>53817</td>\n",
       "      <td>53817</td>\n",
       "      <td>53817</td>\n",
       "      <td>53817</td>\n",
       "      <td>53817</td>\n",
       "      <td>53817</td>\n",
       "      <td>53817</td>\n",
       "      <td>53817</td>\n",
       "      <td>53817</td>\n",
       "      <td>53817</td>\n",
       "      <td>53817</td>\n",
       "      <td>53817</td>\n",
       "      <td>53817</td>\n",
       "      <td>53817</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>ASTROPAYDIRECT</td>\n",
       "      <td>1176</td>\n",
       "      <td>1176</td>\n",
       "      <td>1176</td>\n",
       "      <td>1176</td>\n",
       "      <td>1176</td>\n",
       "      <td>1176</td>\n",
       "      <td>1176</td>\n",
       "      <td>1176</td>\n",
       "      <td>1176</td>\n",
       "      <td>1176</td>\n",
       "      <td>1176</td>\n",
       "      <td>1176</td>\n",
       "      <td>1176</td>\n",
       "      <td>1176</td>\n",
       "      <td>1176</td>\n",
       "      <td>1176</td>\n",
       "      <td>1176</td>\n",
       "      <td>1176</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>BOGUS</td>\n",
       "      <td>15</td>\n",
       "      <td>15</td>\n",
       "      <td>15</td>\n",
       "      <td>15</td>\n",
       "      <td>15</td>\n",
       "      <td>15</td>\n",
       "      <td>15</td>\n",
       "      <td>15</td>\n",
       "      <td>15</td>\n",
       "      <td>15</td>\n",
       "      <td>15</td>\n",
       "      <td>15</td>\n",
       "      <td>15</td>\n",
       "      <td>15</td>\n",
       "      <td>15</td>\n",
       "      <td>15</td>\n",
       "      <td>15</td>\n",
       "      <td>15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>CASHFREE_DBT</td>\n",
       "      <td>2446</td>\n",
       "      <td>2446</td>\n",
       "      <td>2446</td>\n",
       "      <td>2446</td>\n",
       "      <td>2446</td>\n",
       "      <td>2446</td>\n",
       "      <td>2446</td>\n",
       "      <td>2446</td>\n",
       "      <td>2446</td>\n",
       "      <td>2446</td>\n",
       "      <td>2446</td>\n",
       "      <td>2446</td>\n",
       "      <td>2446</td>\n",
       "      <td>2446</td>\n",
       "      <td>2446</td>\n",
       "      <td>2446</td>\n",
       "      <td>2446</td>\n",
       "      <td>2446</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          GATEWAY  USERINTID  VIP_STATUS  TRANSID  COMPLETION_DATE  \\\n",
       "0         ACH_PND        724         724      724              724   \n",
       "1           ADMIN      53817       53817    53817            53817   \n",
       "2  ASTROPAYDIRECT       1176        1176     1176             1176   \n",
       "3           BOGUS         15          15       15               15   \n",
       "4    CASHFREE_DBT       2446        2446     2446             2446   \n",
       "\n",
       "    USD_AMOUNT   ACCOUNT_CURRENCY  PAYSYSTEM  ROLLBACK  OVERCREDIT  \\\n",
       "0           724               724        724       724         724   \n",
       "1         53817             53817      53817     53817       53817   \n",
       "2          1176              1176       1176      1176        1176   \n",
       "3            15                15         15        15          15   \n",
       "4          2446              2446       2446      2446        2446   \n",
       "\n",
       "   FINAL_STATUS  ATAS_SCREENING   RISK  ATAS_RULE  STATUS  OLDSTATUS  \\\n",
       "0           724             724    724        724     724        724   \n",
       "1         53817           53817  53817      53817   53817      53817   \n",
       "2          1176            1176   1176       1176    1176       1176   \n",
       "3            15              15     15         15      15         15   \n",
       "4          2446            2446   2446       2446    2446       2446   \n",
       "\n",
       "   OUTCOME_POST_M  HOST_OUTCOME_POST_M  Effective_Rules  \n",
       "0             724                  724              724  \n",
       "1           53817                53817            53817  \n",
       "2            1176                 1176             1176  \n",
       "3              15                   15               15  \n",
       "4            2446                 2446             2446  "
      ]
     },
     "execution_count": 1363,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "AlertsPerGateway = WithdrawalsJulyWeek4.groupby(['GATEWAY']).count().reset_index()\n",
    "AlertsPerGateway.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1364,
   "id": "1dc21372-3675-42e9-be3e-86ce2bda2045",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>GATEWAY</th>\n",
       "      <th>TRANSID</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>ACH_PND</td>\n",
       "      <td>724</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>ADMIN</td>\n",
       "      <td>53817</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>ASTROPAYDIRECT</td>\n",
       "      <td>1176</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>BOGUS</td>\n",
       "      <td>15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>CASHFREE_DBT</td>\n",
       "      <td>2446</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          GATEWAY  TRANSID\n",
       "0         ACH_PND      724\n",
       "1           ADMIN    53817\n",
       "2  ASTROPAYDIRECT     1176\n",
       "3           BOGUS       15\n",
       "4    CASHFREE_DBT     2446"
      ]
     },
     "execution_count": 1364,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "AlertsPerGateway = AlertsPerGateway[['GATEWAY', 'TRANSID']]\n",
    "AlertsPerGateway.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1365,
   "id": "08d59efd-6001-47a8-843f-7b777ce17b28",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>USERINTID</th>\n",
       "      <th>VIP_STATUS</th>\n",
       "      <th>TRANSID</th>\n",
       "      <th>COMPLETION_DATE</th>\n",
       "      <th>USD_AMOUNT</th>\n",
       "      <th>ACCOUNT_CURRENCY</th>\n",
       "      <th>PAYSYSTEM</th>\n",
       "      <th>GATEWAY</th>\n",
       "      <th>ROLLBACK</th>\n",
       "      <th>OVERCREDIT</th>\n",
       "      <th>FINAL_STATUS</th>\n",
       "      <th>ATAS_SCREENING</th>\n",
       "      <th>RISK</th>\n",
       "      <th>ATAS_RULE</th>\n",
       "      <th>STATUS</th>\n",
       "      <th>OLDSTATUS</th>\n",
       "      <th>OUTCOME_POST_M</th>\n",
       "      <th>HOST_OUTCOME_POST_M</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Effective_Rules</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>FalseAlarm</th>\n",
       "      <td>63786440</td>\n",
       "      <td>0</td>\n",
       "      <td>2680739487</td>\n",
       "      <td>25/07/2021</td>\n",
       "      <td>11.26</td>\n",
       "      <td>EUR</td>\n",
       "      <td>TAX</td>\n",
       "      <td>ADMIN</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>A</td>\n",
       "      <td>No</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>FalseAlarm</th>\n",
       "      <td>113590940</td>\n",
       "      <td>0</td>\n",
       "      <td>2680726130</td>\n",
       "      <td>25/07/2021</td>\n",
       "      <td>0.00</td>\n",
       "      <td>CAD</td>\n",
       "      <td>DIRBANK</td>\n",
       "      <td>GCash</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>A</td>\n",
       "      <td>No</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>FalseAlarm</th>\n",
       "      <td>130060541</td>\n",
       "      <td>0</td>\n",
       "      <td>2680728142</td>\n",
       "      <td>25/07/2021</td>\n",
       "      <td>137.43</td>\n",
       "      <td>GBP</td>\n",
       "      <td>MASTERCARD</td>\n",
       "      <td>WORLDPAY_WPG</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>A</td>\n",
       "      <td>No</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>FalseAlarm</th>\n",
       "      <td>59425843</td>\n",
       "      <td>0</td>\n",
       "      <td>2680719397</td>\n",
       "      <td>25/07/2021</td>\n",
       "      <td>9.88</td>\n",
       "      <td>EUR</td>\n",
       "      <td>TAX</td>\n",
       "      <td>ADMIN</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>A</td>\n",
       "      <td>No</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>FalseAlarm</th>\n",
       "      <td>95610708</td>\n",
       "      <td>0</td>\n",
       "      <td>2680727257</td>\n",
       "      <td>25/07/2021</td>\n",
       "      <td>411.99</td>\n",
       "      <td>EUR</td>\n",
       "      <td>PAYPAL</td>\n",
       "      <td>PAYPALDIRECT</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>A</td>\n",
       "      <td>No</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                 USERINTID  VIP_STATUS     TRANSID COMPLETION_DATE  \\\n",
       "Effective_Rules                                                      \n",
       "FalseAlarm        63786440           0  2680739487      25/07/2021   \n",
       "FalseAlarm       113590940           0  2680726130      25/07/2021   \n",
       "FalseAlarm       130060541           0  2680728142      25/07/2021   \n",
       "FalseAlarm        59425843           0  2680719397      25/07/2021   \n",
       "FalseAlarm        95610708           0  2680727257      25/07/2021   \n",
       "\n",
       "                  USD_AMOUNT  ACCOUNT_CURRENCY   PAYSYSTEM       GATEWAY  \\\n",
       "Effective_Rules                                                            \n",
       "FalseAlarm              11.26              EUR         TAX         ADMIN   \n",
       "FalseAlarm               0.00              CAD     DIRBANK         GCash   \n",
       "FalseAlarm             137.43              GBP  MASTERCARD  WORLDPAY_WPG   \n",
       "FalseAlarm               9.88              EUR         TAX         ADMIN   \n",
       "FalseAlarm             411.99              EUR      PAYPAL  PAYPALDIRECT   \n",
       "\n",
       "                ROLLBACK OVERCREDIT FINAL_STATUS ATAS_SCREENING RISK  \\\n",
       "Effective_Rules                                                        \n",
       "FalseAlarm            No        Yes            A             No    -   \n",
       "FalseAlarm            No        Yes            A             No    -   \n",
       "FalseAlarm           Yes         No            A             No    -   \n",
       "FalseAlarm            No        Yes            A             No    -   \n",
       "FalseAlarm            No        Yes            A             No    -   \n",
       "\n",
       "                ATAS_RULE STATUS OLDSTATUS OUTCOME_POST_M HOST_OUTCOME_POST_M  \n",
       "Effective_Rules                                                                \n",
       "FalseAlarm              -      -         -              -                   -  \n",
       "FalseAlarm              -      -         -              -                   -  \n",
       "FalseAlarm              -      -         -              -                   -  \n",
       "FalseAlarm              -      -         -              -                   -  \n",
       "FalseAlarm              -      -         -              -                   -  "
      ]
     },
     "execution_count": 1365,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "New_Index = WithdrawalsJulyWeek4.set_index('Effective_Rules')\n",
    "New_Index.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1366,
   "id": "f71d9ca5-c7c4-412f-ba2b-b798216ff8a3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>USERINTID</th>\n",
       "      <th>VIP_STATUS</th>\n",
       "      <th>TRANSID</th>\n",
       "      <th>COMPLETION_DATE</th>\n",
       "      <th>USD_AMOUNT</th>\n",
       "      <th>ACCOUNT_CURRENCY</th>\n",
       "      <th>PAYSYSTEM</th>\n",
       "      <th>GATEWAY</th>\n",
       "      <th>ROLLBACK</th>\n",
       "      <th>OVERCREDIT</th>\n",
       "      <th>FINAL_STATUS</th>\n",
       "      <th>ATAS_SCREENING</th>\n",
       "      <th>RISK</th>\n",
       "      <th>ATAS_RULE</th>\n",
       "      <th>STATUS</th>\n",
       "      <th>OLDSTATUS</th>\n",
       "      <th>OUTCOME_POST_M</th>\n",
       "      <th>HOST_OUTCOME_POST_M</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Effective_Rules</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Effective</th>\n",
       "      <td>11098265</td>\n",
       "      <td>0</td>\n",
       "      <td>2680735967</td>\n",
       "      <td>25/07/2021</td>\n",
       "      <td>0.0</td>\n",
       "      <td>GBP</td>\n",
       "      <td>VISA</td>\n",
       "      <td>FDMS_3DS</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>R</td>\n",
       "      <td>No</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Effective</th>\n",
       "      <td>11098265</td>\n",
       "      <td>0</td>\n",
       "      <td>2680735986</td>\n",
       "      <td>25/07/2021</td>\n",
       "      <td>0.0</td>\n",
       "      <td>GBP</td>\n",
       "      <td>VISA</td>\n",
       "      <td>FDMS_3DS</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>R</td>\n",
       "      <td>No</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Effective</th>\n",
       "      <td>131458070</td>\n",
       "      <td>0</td>\n",
       "      <td>2680602126</td>\n",
       "      <td>25/07/2021</td>\n",
       "      <td>0.0</td>\n",
       "      <td>USD</td>\n",
       "      <td>MUCHBETTER</td>\n",
       "      <td>MUCHBETTER</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>R</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Medium</td>\n",
       "      <td>GI Alert</td>\n",
       "      <td>R</td>\n",
       "      <td>M</td>\n",
       "      <td>R</td>\n",
       "      <td>HostHasanthP</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Effective</th>\n",
       "      <td>11098265</td>\n",
       "      <td>0</td>\n",
       "      <td>2680736008</td>\n",
       "      <td>25/07/2021</td>\n",
       "      <td>0.0</td>\n",
       "      <td>GBP</td>\n",
       "      <td>VISA</td>\n",
       "      <td>FDMS_3DS</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>R</td>\n",
       "      <td>No</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Effective</th>\n",
       "      <td>11098265</td>\n",
       "      <td>0</td>\n",
       "      <td>2680736022</td>\n",
       "      <td>25/07/2021</td>\n",
       "      <td>0.0</td>\n",
       "      <td>GBP</td>\n",
       "      <td>VISA</td>\n",
       "      <td>FDMS_3DS</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>R</td>\n",
       "      <td>No</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Effective</th>\n",
       "      <td>11098265</td>\n",
       "      <td>0</td>\n",
       "      <td>2680736020</td>\n",
       "      <td>25/07/2021</td>\n",
       "      <td>0.0</td>\n",
       "      <td>GBP</td>\n",
       "      <td>VISA</td>\n",
       "      <td>FDMS_3DS</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>R</td>\n",
       "      <td>No</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Effective</th>\n",
       "      <td>11098265</td>\n",
       "      <td>0</td>\n",
       "      <td>2680736021</td>\n",
       "      <td>25/07/2021</td>\n",
       "      <td>0.0</td>\n",
       "      <td>GBP</td>\n",
       "      <td>VISA</td>\n",
       "      <td>FDMS_3DS</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>R</td>\n",
       "      <td>No</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Effective</th>\n",
       "      <td>79900733</td>\n",
       "      <td>0</td>\n",
       "      <td>2680744584</td>\n",
       "      <td>25/07/2021</td>\n",
       "      <td>0.0</td>\n",
       "      <td>GBP</td>\n",
       "      <td>VISA</td>\n",
       "      <td>FDMS_3DS</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>R</td>\n",
       "      <td>No</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Effective</th>\n",
       "      <td>131634734</td>\n",
       "      <td>0</td>\n",
       "      <td>2680654986</td>\n",
       "      <td>25/07/2021</td>\n",
       "      <td>0.0</td>\n",
       "      <td>GBP</td>\n",
       "      <td>VISA</td>\n",
       "      <td>VISA_PND</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>R</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Turnover Of Funds</td>\n",
       "      <td>R</td>\n",
       "      <td>M</td>\n",
       "      <td>R</td>\n",
       "      <td>HostHasanthP</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Effective</th>\n",
       "      <td>85593211</td>\n",
       "      <td>0</td>\n",
       "      <td>2680730397</td>\n",
       "      <td>25/07/2021</td>\n",
       "      <td>0.0</td>\n",
       "      <td>USD</td>\n",
       "      <td>MBOOKERS</td>\n",
       "      <td>MBOOK</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>R</td>\n",
       "      <td>No</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                 USERINTID  VIP_STATUS     TRANSID COMPLETION_DATE  \\\n",
       "Effective_Rules                                                      \n",
       "Effective         11098265           0  2680735967      25/07/2021   \n",
       "Effective         11098265           0  2680735986      25/07/2021   \n",
       "Effective        131458070           0  2680602126      25/07/2021   \n",
       "Effective         11098265           0  2680736008      25/07/2021   \n",
       "Effective         11098265           0  2680736022      25/07/2021   \n",
       "Effective         11098265           0  2680736020      25/07/2021   \n",
       "Effective         11098265           0  2680736021      25/07/2021   \n",
       "Effective         79900733           0  2680744584      25/07/2021   \n",
       "Effective        131634734           0  2680654986      25/07/2021   \n",
       "Effective         85593211           0  2680730397      25/07/2021   \n",
       "\n",
       "                  USD_AMOUNT  ACCOUNT_CURRENCY   PAYSYSTEM     GATEWAY  \\\n",
       "Effective_Rules                                                          \n",
       "Effective                 0.0              GBP        VISA    FDMS_3DS   \n",
       "Effective                 0.0              GBP        VISA    FDMS_3DS   \n",
       "Effective                 0.0              USD  MUCHBETTER  MUCHBETTER   \n",
       "Effective                 0.0              GBP        VISA    FDMS_3DS   \n",
       "Effective                 0.0              GBP        VISA    FDMS_3DS   \n",
       "Effective                 0.0              GBP        VISA    FDMS_3DS   \n",
       "Effective                 0.0              GBP        VISA    FDMS_3DS   \n",
       "Effective                 0.0              GBP        VISA    FDMS_3DS   \n",
       "Effective                 0.0              GBP        VISA    VISA_PND   \n",
       "Effective                 0.0              USD    MBOOKERS       MBOOK   \n",
       "\n",
       "                ROLLBACK OVERCREDIT FINAL_STATUS ATAS_SCREENING    RISK  \\\n",
       "Effective_Rules                                                           \n",
       "Effective            Yes         No            R             No       -   \n",
       "Effective            Yes         No            R             No       -   \n",
       "Effective             No        Yes            R            Yes  Medium   \n",
       "Effective            Yes         No            R             No       -   \n",
       "Effective             No         No            R             No       -   \n",
       "Effective             No         No            R             No       -   \n",
       "Effective             No         No            R             No       -   \n",
       "Effective            Yes         No            R             No       -   \n",
       "Effective             No        Yes            R            Yes  Medium   \n",
       "Effective             No        Yes            R             No       -   \n",
       "\n",
       "                         ATAS_RULE STATUS OLDSTATUS OUTCOME_POST_M  \\\n",
       "Effective_Rules                                                      \n",
       "Effective                        -      -         -              -   \n",
       "Effective                        -      -         -              -   \n",
       "Effective                 GI Alert      R         M              R   \n",
       "Effective                        -      -         -              -   \n",
       "Effective                        -      -         -              -   \n",
       "Effective                        -      -         -              -   \n",
       "Effective                        -      -         -              -   \n",
       "Effective                        -      -         -              -   \n",
       "Effective        Turnover Of Funds      R         M              R   \n",
       "Effective                        -      -         -              -   \n",
       "\n",
       "                HOST_OUTCOME_POST_M  \n",
       "Effective_Rules                      \n",
       "Effective                         -  \n",
       "Effective                         -  \n",
       "Effective              HostHasanthP  \n",
       "Effective                         -  \n",
       "Effective                         -  \n",
       "Effective                         -  \n",
       "Effective                         -  \n",
       "Effective                         -  \n",
       "Effective              HostHasanthP  \n",
       "Effective                         -  "
      ]
     },
     "execution_count": 1366,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "AbuseAlerts = New_Index.drop('FalseAlarm')\n",
    "AbuseAlerts.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1367,
   "id": "2dc4397e-e76f-4993-acf3-2ccef0980749",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>GATEWAY</th>\n",
       "      <th>USERINTID</th>\n",
       "      <th>VIP_STATUS</th>\n",
       "      <th>TRANSID</th>\n",
       "      <th>COMPLETION_DATE</th>\n",
       "      <th>USD_AMOUNT</th>\n",
       "      <th>ACCOUNT_CURRENCY</th>\n",
       "      <th>PAYSYSTEM</th>\n",
       "      <th>ROLLBACK</th>\n",
       "      <th>OVERCREDIT</th>\n",
       "      <th>FINAL_STATUS</th>\n",
       "      <th>ATAS_SCREENING</th>\n",
       "      <th>RISK</th>\n",
       "      <th>ATAS_RULE</th>\n",
       "      <th>STATUS</th>\n",
       "      <th>OLDSTATUS</th>\n",
       "      <th>OUTCOME_POST_M</th>\n",
       "      <th>HOST_OUTCOME_POST_M</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>ACH_PND</td>\n",
       "      <td>77</td>\n",
       "      <td>77</td>\n",
       "      <td>77</td>\n",
       "      <td>77</td>\n",
       "      <td>77</td>\n",
       "      <td>77</td>\n",
       "      <td>77</td>\n",
       "      <td>77</td>\n",
       "      <td>77</td>\n",
       "      <td>77</td>\n",
       "      <td>77</td>\n",
       "      <td>77</td>\n",
       "      <td>77</td>\n",
       "      <td>77</td>\n",
       "      <td>77</td>\n",
       "      <td>77</td>\n",
       "      <td>77</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>ASTROPAYDIRECT</td>\n",
       "      <td>199</td>\n",
       "      <td>199</td>\n",
       "      <td>199</td>\n",
       "      <td>199</td>\n",
       "      <td>199</td>\n",
       "      <td>199</td>\n",
       "      <td>199</td>\n",
       "      <td>199</td>\n",
       "      <td>199</td>\n",
       "      <td>199</td>\n",
       "      <td>199</td>\n",
       "      <td>199</td>\n",
       "      <td>199</td>\n",
       "      <td>199</td>\n",
       "      <td>199</td>\n",
       "      <td>199</td>\n",
       "      <td>199</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>BOGUS</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>CREDTA</td>\n",
       "      <td>10</td>\n",
       "      <td>10</td>\n",
       "      <td>10</td>\n",
       "      <td>10</td>\n",
       "      <td>10</td>\n",
       "      <td>10</td>\n",
       "      <td>10</td>\n",
       "      <td>10</td>\n",
       "      <td>10</td>\n",
       "      <td>10</td>\n",
       "      <td>10</td>\n",
       "      <td>10</td>\n",
       "      <td>10</td>\n",
       "      <td>10</td>\n",
       "      <td>10</td>\n",
       "      <td>10</td>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>DBT_PND</td>\n",
       "      <td>407</td>\n",
       "      <td>407</td>\n",
       "      <td>407</td>\n",
       "      <td>407</td>\n",
       "      <td>407</td>\n",
       "      <td>407</td>\n",
       "      <td>407</td>\n",
       "      <td>407</td>\n",
       "      <td>407</td>\n",
       "      <td>407</td>\n",
       "      <td>407</td>\n",
       "      <td>407</td>\n",
       "      <td>407</td>\n",
       "      <td>407</td>\n",
       "      <td>407</td>\n",
       "      <td>407</td>\n",
       "      <td>407</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          GATEWAY  USERINTID  VIP_STATUS  TRANSID  COMPLETION_DATE  \\\n",
       "0         ACH_PND         77          77       77               77   \n",
       "1  ASTROPAYDIRECT        199         199      199              199   \n",
       "2           BOGUS          1           1        1                1   \n",
       "3          CREDTA         10          10       10               10   \n",
       "4         DBT_PND        407         407      407              407   \n",
       "\n",
       "    USD_AMOUNT   ACCOUNT_CURRENCY  PAYSYSTEM  ROLLBACK  OVERCREDIT  \\\n",
       "0            77                77         77        77          77   \n",
       "1           199               199        199       199         199   \n",
       "2             1                 1          1         1           1   \n",
       "3            10                10         10        10          10   \n",
       "4           407               407        407       407         407   \n",
       "\n",
       "   FINAL_STATUS  ATAS_SCREENING  RISK  ATAS_RULE  STATUS  OLDSTATUS  \\\n",
       "0            77              77    77         77      77         77   \n",
       "1           199             199   199        199     199        199   \n",
       "2             1               1     1          1       1          1   \n",
       "3            10              10    10         10      10         10   \n",
       "4           407             407   407        407     407        407   \n",
       "\n",
       "   OUTCOME_POST_M  HOST_OUTCOME_POST_M  \n",
       "0              77                   77  \n",
       "1             199                  199  \n",
       "2               1                    1  \n",
       "3              10                   10  \n",
       "4             407                  407  "
      ]
     },
     "execution_count": 1367,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Rejected_Alerts = AbuseAlerts.groupby(['GATEWAY']).count().reset_index()\n",
    "Rejected_Alerts.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1368,
   "id": "a7fb038f-d05a-4d9a-8de0-147aa0796d0d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(29, 18)"
      ]
     },
     "execution_count": 1368,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Rejected_Alerts.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1369,
   "id": "6dc047fc-768a-484e-80b1-50914b4b9df9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>GATEWAY</th>\n",
       "      <th>USERINTID</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>ACH_PND</td>\n",
       "      <td>77</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>ASTROPAYDIRECT</td>\n",
       "      <td>199</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>BOGUS</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>CREDTA</td>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>DBT_PND</td>\n",
       "      <td>407</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          GATEWAY  USERINTID\n",
       "0         ACH_PND         77\n",
       "1  ASTROPAYDIRECT        199\n",
       "2           BOGUS          1\n",
       "3          CREDTA         10\n",
       "4         DBT_PND        407"
      ]
     },
     "execution_count": 1369,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Rejected_Alerts = Rejected_Alerts[['GATEWAY', 'USERINTID']]\n",
    "Rejected_Alerts.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1370,
   "id": "eae69219-eea5-4194-bd37-a56a02b4b0fc",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>GATEWAY</th>\n",
       "      <th>TRANSID</th>\n",
       "      <th>USERINTID</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>ACH_PND</td>\n",
       "      <td>724</td>\n",
       "      <td>77.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>ADMIN</td>\n",
       "      <td>53817</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>ASTROPAYDIRECT</td>\n",
       "      <td>1176</td>\n",
       "      <td>199.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>BOGUS</td>\n",
       "      <td>15</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>CASHFREE_DBT</td>\n",
       "      <td>2446</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          GATEWAY  TRANSID  USERINTID\n",
       "0         ACH_PND      724       77.0\n",
       "1           ADMIN    53817        NaN\n",
       "2  ASTROPAYDIRECT     1176      199.0\n",
       "3           BOGUS       15        1.0\n",
       "4    CASHFREE_DBT     2446        NaN"
      ]
     },
     "execution_count": 1370,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Gateways = AlertsPerGateway.merge(Rejected_Alerts, how='outer')\n",
    "Gateways.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1371,
   "id": "7f0187e3-51ff-46e5-989b-43a184953653",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>GATEWAY</th>\n",
       "      <th>TRANSID</th>\n",
       "      <th>USERINTID</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>ACH_PND</td>\n",
       "      <td>724</td>\n",
       "      <td>77.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>ADMIN</td>\n",
       "      <td>53817</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>ASTROPAYDIRECT</td>\n",
       "      <td>1176</td>\n",
       "      <td>199.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>BOGUS</td>\n",
       "      <td>15</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>CASHFREE_DBT</td>\n",
       "      <td>2446</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>CREDTA</td>\n",
       "      <td>466</td>\n",
       "      <td>10.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>DBT_PND</td>\n",
       "      <td>9223</td>\n",
       "      <td>407.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>EARTHPORTDBT</td>\n",
       "      <td>3458</td>\n",
       "      <td>29.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>ECOPAYZ</td>\n",
       "      <td>944</td>\n",
       "      <td>7.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>ENVOY</td>\n",
       "      <td>12751</td>\n",
       "      <td>14.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          GATEWAY  TRANSID  USERINTID\n",
       "0         ACH_PND      724       77.0\n",
       "1           ADMIN    53817        0.0\n",
       "2  ASTROPAYDIRECT     1176      199.0\n",
       "3           BOGUS       15        1.0\n",
       "4    CASHFREE_DBT     2446        0.0\n",
       "5          CREDTA      466       10.0\n",
       "6         DBT_PND     9223      407.0\n",
       "7    EARTHPORTDBT     3458       29.0\n",
       "8         ECOPAYZ      944        7.0\n",
       "9           ENVOY    12751       14.0"
      ]
     },
     "execution_count": 1371,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Gateways[['USERINTID']] = Gateways[['USERINTID']].fillna(0)\n",
    "Gateways.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1372,
   "id": "3d8e2a17-e12b-4c39-84e0-767d4f2f1aa4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "GATEWAY       object\n",
       "TRANSID        int64\n",
       "USERINTID    float64\n",
       "dtype: object"
      ]
     },
     "execution_count": 1372,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Gateways.dtypes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1373,
   "id": "9b7a3b3e-f67c-4f87-98b8-081bbb58e2db",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "GATEWAY       object\n",
       "TRANSID      float64\n",
       "USERINTID    float64\n",
       "dtype: object"
      ]
     },
     "execution_count": 1373,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Gateways[\"TRANSID\"] = Gateways[\"TRANSID\"].astype('float64')\n",
    "Gateways.dtypes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1374,
   "id": "85658018-9744-465f-858a-2fba26aa968b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "           GATEWAY   TRANSID  USERINTID  PercentageEffective\n",
      "0          ACH_PND     724.0       77.0                10.64\n",
      "1            ADMIN   53817.0        0.0                 0.00\n",
      "2   ASTROPAYDIRECT    1176.0      199.0                16.92\n",
      "3            BOGUS      15.0        1.0                 6.67\n",
      "4     CASHFREE_DBT    2446.0        0.0                 0.00\n",
      "5           CREDTA     466.0       10.0                 2.15\n",
      "6          DBT_PND    9223.0      407.0                 4.41\n",
      "7     EARTHPORTDBT    3458.0       29.0                 0.84\n",
      "8          ECOPAYZ     944.0        7.0                 0.74\n",
      "9            ENVOY   12751.0       14.0                 0.11\n",
      "10        FDMS_3DS   31213.0     1338.0                 4.29\n",
      "11           GCash  145307.0        0.0                 0.00\n",
      "12            GIMO    1240.0        0.0                 0.00\n",
      "13          GLOBAL    3692.0        0.0                 0.00\n",
      "14        INOVAPAY     162.0        4.0                 2.47\n",
      "15      INSTADEBIT     870.0       11.0                 1.26\n",
      "16  MASTERCARD_PND     101.0       62.0                61.39\n",
      "17           MBOOK   13036.0      252.0                 1.93\n",
      "18      MUCHBETTER    4574.0      219.0                 4.79\n",
      "19        NETELLER       1.0        1.0               100.00\n",
      "20       NETELLER2    4498.0       86.0                 1.91\n",
      "21        NOT_SENT      32.0        0.0                 0.00\n",
      "22       PARAMOUNT    9038.0       21.0                 0.23\n",
      "23         PAY4FUN     383.0        2.0                 0.52\n",
      "24    PAYPALDIRECT   22171.0       70.0                 0.32\n",
      "25       SIGHTLINE      61.0        0.0                 0.00\n",
      "26        VISA_PND     470.0      233.0                49.57\n",
      "27        WEBMONEY    3280.0        6.0                 0.18\n",
      "28     WIRE_MANUAL       8.0        2.0                25.00\n",
      "29        WIRE_PND      57.0        9.0                15.79\n",
      "30        WORLDPAY       1.0        1.0               100.00\n",
      "31    WORLDPAY_WPG   28918.0      894.0                 3.09\n",
      "32  WORLDPAY_WPG_A    2964.0      326.0                11.00\n",
      "33  WORLDPAY_WPG_G      84.0        1.0                 1.19\n",
      "34            XPAY      18.0       13.0                72.22\n",
      "35       XPAY_FDMS     379.0       36.0                 9.50\n"
     ]
    }
   ],
   "source": [
    "Gateways['PercentageEffective'] = Gateways.apply(lambda x: round((x['USERINTID'] / x['TRANSID'])*100,2), axis=1)\n",
    "print(Gateways)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1375,
   "id": "04c2b6c3-3552-43d2-8584-f30a76711110",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10.64 % of 724.0 transactions were fraudulent for ACH_PND\n",
      "0.0 % of 53817.0 transactions were fraudulent for ADMIN\n",
      "16.92 % of 1176.0 transactions were fraudulent for ASTROPAYDIRECT\n",
      "6.67 % of 15.0 transactions were fraudulent for BOGUS\n",
      "0.0 % of 2446.0 transactions were fraudulent for CASHFREE_DBT\n",
      "2.15 % of 466.0 transactions were fraudulent for CREDTA\n",
      "4.41 % of 9223.0 transactions were fraudulent for DBT_PND\n",
      "0.84 % of 3458.0 transactions were fraudulent for EARTHPORTDBT\n",
      "0.74 % of 944.0 transactions were fraudulent for ECOPAYZ\n",
      "0.11 % of 12751.0 transactions were fraudulent for ENVOY\n",
      "4.29 % of 31213.0 transactions were fraudulent for FDMS_3DS\n",
      "0.0 % of 145307.0 transactions were fraudulent for GCash\n",
      "0.0 % of 1240.0 transactions were fraudulent for GIMO\n",
      "0.0 % of 3692.0 transactions were fraudulent for GLOBAL\n",
      "2.47 % of 162.0 transactions were fraudulent for INOVAPAY\n",
      "1.26 % of 870.0 transactions were fraudulent for INSTADEBIT\n",
      "61.39 % of 101.0 transactions were fraudulent for MASTERCARD_PND\n",
      "1.93 % of 13036.0 transactions were fraudulent for MBOOK\n",
      "4.79 % of 4574.0 transactions were fraudulent for MUCHBETTER\n",
      "100.0 % of 1.0 transactions were fraudulent for NETELLER\n",
      "1.91 % of 4498.0 transactions were fraudulent for NETELLER2\n",
      "0.0 % of 32.0 transactions were fraudulent for NOT_SENT\n",
      "0.23 % of 9038.0 transactions were fraudulent for PARAMOUNT\n",
      "0.52 % of 383.0 transactions were fraudulent for PAY4FUN\n",
      "0.32 % of 22171.0 transactions were fraudulent for PAYPALDIRECT\n",
      "0.0 % of 61.0 transactions were fraudulent for SIGHTLINE\n",
      "49.57 % of 470.0 transactions were fraudulent for VISA_PND\n",
      "0.18 % of 3280.0 transactions were fraudulent for WEBMONEY\n",
      "25.0 % of 8.0 transactions were fraudulent for WIRE_MANUAL\n",
      "15.79 % of 57.0 transactions were fraudulent for WIRE_PND\n",
      "100.0 % of 1.0 transactions were fraudulent for WORLDPAY\n",
      "3.09 % of 28918.0 transactions were fraudulent for WORLDPAY_WPG\n",
      "11.0 % of 2964.0 transactions were fraudulent for WORLDPAY_WPG_A\n",
      "1.19 % of 84.0 transactions were fraudulent for WORLDPAY_WPG_G\n",
      "72.22 % of 18.0 transactions were fraudulent for XPAY\n"
     ]
    }
   ],
   "source": [
    "for index, row in Gateways.head(35).iterrows():\n",
    "    print(f\"{row[3]} % of {row[1]} transactions were fraudulent for {row[0]}\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "af1361f1-6d54-4ef0-83b9-aa62de14b265",
   "metadata": {},
   "source": [
    "# Analysis of Bitcoin Price in January 2022"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1376,
   "id": "78aa2431-8410-418a-b739-278cb884ee76",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'{\"time\":{\"updated\":\"Jan 31, 2022 21:06:00 UTC\",\"updatedISO\":\"2022-01-31T21:06:00+00:00\",\"updateduk\":\"Jan 31, 2022 at 21:06 GMT\"},\"disclaimer\":\"This data was produced from the CoinDesk Bitcoin Price Index (USD). Non-USD currency data converted using hourly conversion rate from openexchangerates.org\",\"chartName\":\"Bitcoin\",\"bpi\":{\"USD\":{\"code\":\"USD\",\"symbol\":\"&#36;\",\"rate\":\"38,489.0067\",\"description\":\"United States Dollar\",\"rate_float\":38489.0067},\"GBP\":{\"code\":\"GBP\",\"symbol\":\"&pound;\",\"rate\":\"28,618.0775\",\"description\":\"British Pound Sterling\",\"rate_float\":28618.0775},\"EUR\":{\"code\":\"EUR\",\"symbol\":\"&euro;\",\"rate\":\"34,257.3713\",\"description\":\"Euro\",\"rate_float\":34257.3713}}}'"
      ]
     },
     "execution_count": 1376,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import requests\n",
    "Bitcoin = requests.get('https://api.coindesk.com/v1/bpi/currentprice.json')\n",
    "Bitcoin.text\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1377,
   "id": "3480521a-b816-4019-80ea-788210a7a8e2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'updated': 'Jan 31, 2022 21:06:00 UTC',\n",
       " 'updatedISO': '2022-01-31T21:06:00+00:00',\n",
       " 'updateduk': 'Jan 31, 2022 at 21:06 GMT'}"
      ]
     },
     "execution_count": 1377,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "BitcoinDict = Bitcoin.json()\n",
    "BitcoinDict['time']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1378,
   "id": "161fa43f-b26e-410c-87d3-4be5c307b9e5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'This data was produced from the CoinDesk Bitcoin Price Index (USD). Non-USD currency data converted using hourly conversion rate from openexchangerates.org'"
      ]
     },
     "execution_count": 1378,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "BitcoinDict['disclaimer']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1379,
   "id": "7c7e66e7-2c3b-47bb-a720-9e3e00bd80ee",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'Bitcoin'"
      ]
     },
     "execution_count": 1379,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "BitcoinDict['chartName']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1380,
   "id": "6673428f-967f-474e-adef-84113b31c1ef",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                              USD                     GBP          EUR\n",
      "code                          USD                     GBP          EUR\n",
      "symbol                      &#36;                 &pound;       &euro;\n",
      "rate                  38,489.0067             28,618.0775  34,257.3713\n",
      "description  United States Dollar  British Pound Sterling         Euro\n",
      "rate_float             38489.0067              28618.0775   34257.3713\n"
     ]
    }
   ],
   "source": [
    "Bitcoin_DFrame = pd.DataFrame(BitcoinDict['bpi'])\n",
    "print(Bitcoin_DFrame)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1381,
   "id": "9e46b58c-d82f-4b47-a797-83ae18e3aff5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>USD</th>\n",
       "      <th>GBP</th>\n",
       "      <th>EUR</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>code</th>\n",
       "      <td>USD</td>\n",
       "      <td>GBP</td>\n",
       "      <td>EUR</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>rate</th>\n",
       "      <td>38,489.0067</td>\n",
       "      <td>28,618.0775</td>\n",
       "      <td>34,257.3713</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "              USD          GBP          EUR\n",
       "code          USD          GBP          EUR\n",
       "rate  38,489.0067  28,618.0775  34,257.3713"
      ]
     },
     "execution_count": 1381,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Bitcoin_DFrame.iloc[[0,2], [0,1,2]]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1382,
   "id": "d90a6013-aedb-46ed-8bf9-189fab122cbe",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Currency</th>\n",
       "      <th>Date</th>\n",
       "      <th>Closing Price (USD)</th>\n",
       "      <th>24h Open (USD)</th>\n",
       "      <th>24h High (USD)</th>\n",
       "      <th>24h Low (USD)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>BTC</td>\n",
       "      <td>01/01/2022</td>\n",
       "      <td>47739.42003</td>\n",
       "      <td>46207.40597</td>\n",
       "      <td>47927.86556</td>\n",
       "      <td>46205.11303</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>BTC</td>\n",
       "      <td>02/01/2022</td>\n",
       "      <td>47317.94796</td>\n",
       "      <td>47738.76410</td>\n",
       "      <td>47957.23381</td>\n",
       "      <td>46701.40000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>BTC</td>\n",
       "      <td>03/01/2022</td>\n",
       "      <td>46434.50808</td>\n",
       "      <td>47316.17859</td>\n",
       "      <td>47567.20000</td>\n",
       "      <td>45717.50000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Currency        Date  Closing Price (USD)  24h Open (USD)  24h High (USD)  \\\n",
       "0      BTC  01/01/2022          47739.42003     46207.40597     47927.86556   \n",
       "1      BTC  02/01/2022          47317.94796     47738.76410     47957.23381   \n",
       "2      BTC  03/01/2022          46434.50808     47316.17859     47567.20000   \n",
       "\n",
       "   24h Low (USD)  \n",
       "0    46205.11303  \n",
       "1    46701.40000  \n",
       "2    45717.50000  "
      ]
     },
     "execution_count": 1382,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Bitcoin_Trend = pd.read_csv('Desktop/UCD/Assignment/BTC_USD_2022-01-01_2022-01-31-CoinDesk.csv')\n",
    "Bitcoin_Trend.head(3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1383,
   "id": "b949bb32-08e2-433c-9e86-d560f1e0f74e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Currency                object\n",
       "Date                    object\n",
       "Closing Price (USD)    float64\n",
       "24h Open (USD)         float64\n",
       "24h High (USD)         float64\n",
       "24h Low (USD)          float64\n",
       "dtype: object"
      ]
     },
     "execution_count": 1383,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Bitcoin_Trend.dtypes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1384,
   "id": "d1872c9f-d15f-49cd-8683-c05efa1dc391",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.subplots(figsize=(10,5))\n",
    "plt.plot(Bitcoin_Trend['Date'], Bitcoin_Trend['Closing Price (USD)'], color='b',linewidth=1.0)\n",
    "plt.tick_params(axis = 'x', rotation = 45)\n",
    "plt.title(\"Bitcoin Price Tend January\", fontweight ='bold', fontsize = 14)\n",
    "plt.ylabel(\"Price (USD)\", fontweight ='bold')\n",
    "plt.xlabel(\"Date\", fontweight ='bold')\n",
    "plt.tick_params(axis ='x', rotation =45)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.8"
  },
  "toc-autonumbering": true
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
